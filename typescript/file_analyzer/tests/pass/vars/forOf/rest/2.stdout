warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:3:30
  |
3 | for (let { x, ...restOf } of array) {
  |                              ^^^^^
  |
  = note: {
              x: number;
              y: string;
          }[]

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:4:6
  |
4 |     [x, restOf];
  |      ^
  |
  = note: number

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:4:9
  |
4 |     [x, restOf];
  |         ^^^^^^
  |
  = note: {
              y: string;
          }

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:4:5
  |
4 |     [x, restOf];
  |     ^^^^^^^^^^^
  |
  = note: (number | {
              y: string;
          })[]

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:7:43
  |
7 | for (const norest of array.map(a => ({ ...a, x: 'a string' }))) {
  |                                           ^
  |
  = note: any

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:7:38
  |
7 | for (const norest of array.map(a => ({ ...a, x: 'a string' }))) {
  |                                      ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: {
              x: 'a string';
          }

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:7:37
  |
7 | for (const norest of array.map(a => ({ ...a, x: 'a string' }))) {
  |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: {
              x: 'a string';
          }

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:7:32
  |
7 | for (const norest of array.map(a => ({ ...a, x: 'a string' }))) {
  |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: (a: any) => {
              x: 'a string';
          }

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:7:22
  |
7 | for (const norest of array.map(a => ({ ...a, x: 'a string' }))) {
  |                      ^^^^^
  |
  = note: {
              x: number;
              y: string;
          }[]

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:7:43
  |
7 | for (const norest of array.map(a => ({ ...a, x: 'a string' }))) {
  |                                           ^
  |
  = note: {
              x: number;
              y: string;
          }

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:7:38
  |
7 | for (const norest of array.map(a => ({ ...a, x: 'a string' }))) {
  |                                      ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: {
              y: string;
              x: 'a string';
          }

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:7:37
  |
7 | for (const norest of array.map(a => ({ ...a, x: 'a string' }))) {
  |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: {
              y: string;
              x: 'a string';
          }

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:7:32
  |
7 | for (const norest of array.map(a => ({ ...a, x: 'a string' }))) {
  |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: (a: {
              x: number;
              y: string;
          }) => {
              y: string;
              x: 'a string';
          }

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:7:22
  |
7 | for (const norest of array.map(a => ({ ...a, x: 'a string' }))) {
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: {
              y: string;
              x: string;
          }[]

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:8:6
  |
8 |     [norest.x, norest.y];
  |      ^^^^^^
  |
  = note: {
              y: string;
              x: string;
          }

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:8:6
  |
8 |     [norest.x, norest.y];
  |      ^^^^^^^^
  |
  = note: string

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:8:16
  |
8 |     [norest.x, norest.y];
  |                ^^^^^^
  |
  = note: {
              y: string;
              x: string;
          }

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:8:16
  |
8 |     [norest.x, norest.y];
  |                ^^^^^^^^
  |
  = note: string

warning: Type
 --> $DIR/tests/pass/vars/forOf/rest/2.ts:8:5
  |
8 |     [norest.x, norest.y];
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: [string, string]

