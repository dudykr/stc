warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:4:71
  |
4 | const arrayFilter = <T>(f: (x: T) => boolean) => (a: T[]) => a.filter(f);
  |                                                                       ^
  |
  = note: (x: T) => boolean

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:4:62
  |
4 | const arrayFilter = <T>(f: (x: T) => boolean) => (a: T[]) => a.filter(f);
  |                                                              ^
  |
  = note: T[]

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:4:62
  |
4 | const arrayFilter = <T>(f: (x: T) => boolean) => (a: T[]) => a.filter(f);
  |                                                              ^^^^^^^^^^^
  |
  = note: T[]

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:4:50
  |
4 | const arrayFilter = <T>(f: (x: T) => boolean) => (a: T[]) => a.filter(f);
  |                                                  ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: (a: T[]) => T[]

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:4:21
  |
4 | const arrayFilter = <T>(f: (x: T) => boolean) => (a: T[]) => a.filter(f);
  |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: <T>(f: (x: T) => boolean) => (a: T[]) => T[]

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:6:64
  |
6 | export const f30: (a: string[]) => string[] = arrayFilter(x => x.length > 10);
  |                                                                ^
  |
  = note: any

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:6:64
  |
6 | export const f30: (a: string[]) => string[] = arrayFilter(x => x.length > 10);
  |                                                                ^^^^^^^^
  |
  = note: any

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:6:64
  |
6 | export const f30: (a: string[]) => string[] = arrayFilter(x => x.length > 10);
  |                                                                ^^^^^^^^^^^^^
  |
  = note: boolean

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:6:59
  |
6 | export const f30: (a: string[]) => string[] = arrayFilter(x => x.length > 10);
  |                                                           ^^^^^^^^^^^^^^^^^^
  |
  = note: (x: any) => boolean

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:6:47
  |
6 | export const f30: (a: string[]) => string[] = arrayFilter(x => x.length > 10);
  |                                               ^^^^^^^^^^^
  |
  = note: <T>(f: (x: T) => boolean) => <T>(a: T[]) => T[]

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:6:64
  |
6 | export const f30: (a: string[]) => string[] = arrayFilter(x => x.length > 10);
  |                                                                ^
  |
  = note: string

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:6:64
  |
6 | export const f30: (a: string[]) => string[] = arrayFilter(x => x.length > 10);
  |                                                                ^^^^^^^^
  |
  = note: number

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:6:59
  |
6 | export const f30: (a: string[]) => string[] = arrayFilter(x => x.length > 10);
  |                                                           ^^^^^^^^^^^^^^^^^^
  |
  = note: (x: string) => boolean

warning: Type
 --> $DIR/tests/pass/types/inference/generic/contextual/contextual-4-1.ts:6:47
  |
6 | export const f30: (a: string[]) => string[] = arrayFilter(x => x.length > 10);
  |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: (a: string[]) => string[]

