warning: Type
 --> $DIR/tests/pass/exprs/arrow/contextualTyping/paren/1.ts:4:49
  |
4 | export var lambda1: FuncType = x => { x<number>(undefined); return x; };
  |                                                 ^^^^^^^^^
  |
  = note: undefined

warning: Type
 --> $DIR/tests/pass/exprs/arrow/contextualTyping/paren/1.ts:4:39
  |
4 | export var lambda1: FuncType = x => { x<number>(undefined); return x; };
  |                                       ^
  |
  = note: <T>(p: T) => T

warning: Type
 --> $DIR/tests/pass/exprs/arrow/contextualTyping/paren/1.ts:4:39
  |
4 | export var lambda1: FuncType = x => { x<number>(undefined); return x; };
  |                                       ^^^^^^^^^^^^^^^^^^^^
  |
  = note: number

warning: Type
 --> $DIR/tests/pass/exprs/arrow/contextualTyping/paren/1.ts:4:68
  |
4 | export var lambda1: FuncType = x => { x<number>(undefined); return x; };
  |                                                                    ^
  |
  = note: <T>(p: T) => T

warning: Type
 --> $DIR/tests/pass/exprs/arrow/contextualTyping/paren/1.ts:4:32
  |
4 | export var lambda1: FuncType = x => { x<number>(undefined); return x; };
  |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: (x: <T>(p: T) => T) => <T>(p: T) => T

warning: Type
 --> $DIR/tests/pass/exprs/arrow/contextualTyping/paren/1.ts:5:50
  |
5 | export var lambda2: FuncType = (x => { x<number>(undefined); return x; });
  |                                                  ^^^^^^^^^
  |
  = note: undefined

warning: Type
 --> $DIR/tests/pass/exprs/arrow/contextualTyping/paren/1.ts:5:40
  |
5 | export var lambda2: FuncType = (x => { x<number>(undefined); return x; });
  |                                        ^
  |
  = note: <T>(p: T) => T

warning: Type
 --> $DIR/tests/pass/exprs/arrow/contextualTyping/paren/1.ts:5:40
  |
5 | export var lambda2: FuncType = (x => { x<number>(undefined); return x; });
  |                                        ^^^^^^^^^^^^^^^^^^^^
  |
  = note: number

warning: Type
 --> $DIR/tests/pass/exprs/arrow/contextualTyping/paren/1.ts:5:69
  |
5 | export var lambda2: FuncType = (x => { x<number>(undefined); return x; });
  |                                                                     ^
  |
  = note: <T>(p: T) => T

warning: Type
 --> $DIR/tests/pass/exprs/arrow/contextualTyping/paren/1.ts:5:33
  |
5 | export var lambda2: FuncType = (x => { x<number>(undefined); return x; });
  |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: (x: <T>(p: T) => T) => <T>(p: T) => T

warning: Type
 --> $DIR/tests/pass/exprs/arrow/contextualTyping/paren/1.ts:5:32
  |
5 | export var lambda2: FuncType = (x => { x<number>(undefined); return x; });
  |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: (x: <T>(p: T) => T) => <T>(p: T) => T

