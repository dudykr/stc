warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:62
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                              ^
   |
   = note: any

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:56
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                        ^^^^^
   |
   = note: <W>(x: Box<W>) => W

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:56
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                        ^^^^^^^^
   |
   = note: W

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:51
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                   ^^^^^^^^^^^^^
   |
   = note: (a: any) => W

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:78
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                                              ^
   |
   = note: any

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:71
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                                       ^^^^^^
   |
   = note: <T>(a: T[]) => T

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:71
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                                       ^^^^^^^^^
   |
   = note: T

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:66
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                                  ^^^^^^^^^^^^^^
   |
   = note: (b: any) => T

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:43
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                           ^^^^^^^
   |
   = note: <A, B, C>(f: (a: A) => B, g: (b: B) => C) => (a: A) => C

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:62
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                              ^
   |
   = note: Box<T[]>

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:56
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                        ^^^^^^^^
   |
   = note: T[]

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:78
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                                              ^
   |
   = note: W

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:51
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                   ^^^^^^^^^^^^^
   |
   = note: (a: Box<T[]>) => T[]

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:66
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                                                  ^^^^^^^^^^^^^^
   |
   = note: (b: W) => T

warning: Type
  --> $DIR/tests/visualize/types/inference/generic/contextual-2-3.ts:12:43
   |
12 | export const f12: <T>(x: Box<T[]>) => T = compose(a => unbox(a), b => unlist(b));
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: <T>(a: Box<T[]>) => T

