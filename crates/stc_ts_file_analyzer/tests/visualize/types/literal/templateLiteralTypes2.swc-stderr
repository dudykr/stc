warning: Type
 --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:5:22
  |
5 |     const c1 = `abc${s}`;
  |                      ^
  |
  = note: string

warning: Type
 --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:5:16
  |
5 |     const c1 = `abc${s}`;
  |                ^^^^^^^^^
  |
  = note: string

warning: Type
 --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:6:22
  |
6 |     const c2 = `abc${n}`;
  |                      ^
  |
  = note: number

warning: Type
 --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:6:16
  |
6 |     const c2 = `abc${n}`;
  |                ^^^^^^^^^
  |
  = note: string

warning: Type
 --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:7:22
  |
7 |     const c3 = `abc${u}`;
  |                      ^
  |
  = note: ('foo' | 'bar' | 'baz')

warning: Type
 --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:7:16
  |
7 |     const c3 = `abc${u}`;
  |                ^^^^^^^^^
  |
  = note: string

warning: Type
 --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:8:22
  |
8 |     const c4 = `abc${t}`;
  |                      ^
  |
  = note: T

warning: Type
 --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:8:16
  |
8 |     const c4 = `abc${t}`;
  |                ^^^^^^^^^
  |
  = note: string

warning: Type
 --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:9:38
  |
9 |     const d1: `abc${string}` = `abc${s}`;
  |                                      ^
  |
  = note: string

warning: Type
 --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:9:32
  |
9 |     const d1: `abc${string}` = `abc${s}`;
  |                                ^^^^^^^^^
  |
  = note: `abc${string}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:10:38
   |
10 |     const d2: `abc${number}` = `abc${n}`;
   |                                      ^
   |
   = note: number

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:10:32
   |
10 |     const d2: `abc${number}` = `abc${n}`;
   |                                ^^^^^^^^^
   |
   = note: `abc${number}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:11:53
   |
11 |     const d3: `abc${'foo' | 'bar' | 'baz'}` = `abc${u}`;
   |                                                     ^
   |
   = note: ('foo' | 'bar' | 'baz')

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:11:47
   |
11 |     const d3: `abc${'foo' | 'bar' | 'baz'}` = `abc${u}`;
   |                                               ^^^^^^^^^
   |
   = note: `abc${('foo' | 'bar' | 'baz')}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:12:33
   |
12 |     const d4: `abc${T}` = `abc${t}`;
   |                                 ^
   |
   = note: T

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:12:27
   |
12 |     const d4: `abc${T}` = `abc${t}`;
   |                           ^^^^^^^^^
   |
   = note: `abc${T}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:16:18
   |
16 |     return `abc${s}`;
   |                  ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:16:12
   |
16 |     return `abc${s}`;
   |            ^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:20:22
   |
20 |     const c1 = `abc${s}`;  // Type string
   |                      ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:20:16
   |
20 |     const c1 = `abc${s}`;  // Type string
   |                ^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:21:14
   |
21 |     let v1 = c1;  // Type string
   |              ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:22:16
   |
22 |     const c2 = c1;  // Type string
   |                ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:23:14
   |
23 |     let v2 = c2;  // Type string
   |              ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:24:38
   |
24 |     const c3: `abc${string}` = `abc${s}`;
   |                                      ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:24:32
   |
24 |     const c3: `abc${string}` = `abc${s}`;
   |                                ^^^^^^^^^
   |
   = note: `abc${string}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:25:14
   |
25 |     let v3 = c3;  // Type `abc${string}`
   |              ^^
   |
   = note: `abc${string}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:26:32
   |
26 |     const c4: `abc${string}` = c1;  // Type `abc${string}`
   |                                ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:27:14
   |
27 |     let v4 = c4;  // Type `abc${string}`
   |              ^^
   |
   = note: `abc${string}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:31:16
   |
31 |     const c1 = cond ? `foo${s}` : `bar${s}`;  // string
   |                ^^^^
   |
   = note: boolean

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:31:29
   |
31 |     const c1 = cond ? `foo${s}` : `bar${s}`;  // string
   |                             ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:31:23
   |
31 |     const c1 = cond ? `foo${s}` : `bar${s}`;  // string
   |                       ^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:31:41
   |
31 |     const c1 = cond ? `foo${s}` : `bar${s}`;  // string
   |                                         ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:31:35
   |
31 |     const c1 = cond ? `foo${s}` : `bar${s}`;  // string
   |                                   ^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:31:16
   |
31 |     const c1 = cond ? `foo${s}` : `bar${s}`;  // string
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:32:49
   |
32 |     const c2: `foo${string}` | `bar${string}` = c1;  // `foo${string}` | `bar${string}`
   |                                                 ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:33:16
   |
33 |     const c3 = cond ? c1 : c2;  // string
   |                ^^^^
   |
   = note: boolean

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:33:23
   |
33 |     const c3 = cond ? c1 : c2;  // string
   |                       ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:33:28
   |
33 |     const c3 = cond ? c1 : c2;  // string
   |                            ^^
   |
   = note: (`foo${string}` | `bar${string}`)

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:33:16
   |
33 |     const c3 = cond ? c1 : c2;  // string
   |                ^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:34:16
   |
34 |     const c4 = cond ? c3 : `baz${s}`;  // string
   |                ^^^^
   |
   = note: boolean

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:34:23
   |
34 |     const c4 = cond ? c3 : `baz${s}`;  // string
   |                       ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:34:34
   |
34 |     const c4 = cond ? c3 : `baz${s}`;  // string
   |                                  ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:34:28
   |
34 |     const c4 = cond ? c3 : `baz${s}`;  // string
   |                            ^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:34:16
   |
34 |     const c4 = cond ? c3 : `baz${s}`;  // string
   |                ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:35:66
   |
35 |     const c5: `foo${string}` | `bar${string}` | `baz${string}` = c4; // `foo${string}` | `bar${string}` | `baz${string}`
   |                                                                  ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:36:14
   |
36 |     let v1 = c1;  // string
   |              ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:37:14
   |
37 |     let v2 = c2;  // `foo${string}` | `bar${string}`
   |              ^^
   |
   = note: (`foo${string}` | `bar${string}`)

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:38:14
   |
38 |     let v3 = c3;  // string
   |              ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:39:14
   |
39 |     let v4 = c4;  // string
   |              ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:40:14
   |
40 |     let v5 = c5;  // `foo${string}` | `bar${string}` | `baz${string}`
   |              ^^
   |
   = note: (`foo${string}` | `bar${string}` | `baz${string}`)

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:44:22
   |
44 |     const c1 = `foo${s}`;
   |                      ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:44:16
   |
44 |     const c1 = `foo${s}`;
   |                ^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:45:14
   |
45 |     let v1 = c1;
   |              ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:46:38
   |
46 |     const c2: `foo${string}` = `foo${s}`;
   |                                      ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:46:32
   |
46 |     const c2: `foo${string}` = `foo${s}`;
   |                                ^^^^^^^^^
   |
   = note: `foo${string}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:47:14
   |
47 |     let v2 = c2;
   |              ^^
   |
   = note: `foo${string}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:48:22
   |
48 |     const c3 = `foo${s}` as `foo${string}`;
   |                      ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:48:16
   |
48 |     const c3 = `foo${s}` as `foo${string}`;
   |                ^^^^^^^^^
   |
   = note: `foo${string}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:48:16
   |
48 |     const c3 = `foo${s}` as `foo${string}`;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `foo${string}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:49:14
   |
49 |     let v3 = c3;
   |              ^^
   |
   = note: `foo${string}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:50:38
   |
50 |     const c4 = <`foo${string}`>`foo${s}`;
   |                                      ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:50:32
   |
50 |     const c4 = <`foo${string}`>`foo${s}`;
   |                                ^^^^^^^^^
   |
   = note: `foo${string}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:50:16
   |
50 |     const c4 = <`foo${string}`>`foo${s}`;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `foo${string}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:51:14
   |
51 |     let v4 = c4;
   |              ^^
   |
   = note: `foo${string}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:52:22
   |
52 |     const c5 = `foo${s}` as const;
   |                      ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:52:16
   |
52 |     const c5 = `foo${s}` as const;
   |                ^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:52:16
   |
52 |     const c5 = `foo${s}` as const;
   |                ^^^^^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:53:14
   |
53 |     let v5 = c5;
   |              ^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:60:29
   |
60 |     let x1 = widening(`foo${s}`);
   |                             ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:60:23
   |
60 |     let x1 = widening(`foo${s}`);
   |                       ^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:60:14
   |
60 |     let x1 = widening(`foo${s}`);
   |              ^^^^^^^^
   |
   = note: <T>(x: T) => T

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:60:14
   |
60 |     let x1 = widening(`foo${s}`);
   |              ^^^^^^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:61:23
   |
61 |     let x2 = widening(cond ? 'a' : `foo${s}`);
   |                       ^^^^
   |
   = note: boolean

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:61:42
   |
61 |     let x2 = widening(cond ? 'a' : `foo${s}`);
   |                                          ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:61:36
   |
61 |     let x2 = widening(cond ? 'a' : `foo${s}`);
   |                                    ^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:61:23
   |
61 |     let x2 = widening(cond ? 'a' : `foo${s}`);
   |                       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:61:14
   |
61 |     let x2 = widening(cond ? 'a' : `foo${s}`);
   |              ^^^^^^^^
   |
   = note: <T>(x: T) => T

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:61:14
   |
61 |     let x2 = widening(cond ? 'a' : `foo${s}`);
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:62:32
   |
62 |     let y1 = nonWidening(`foo${s}`);
   |                                ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:62:26
   |
62 |     let y1 = nonWidening(`foo${s}`);
   |                          ^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:62:14
   |
62 |     let y1 = nonWidening(`foo${s}`);
   |              ^^^^^^^^^^^
   |
   = note: <T extends (string | number | symbol)>(x: T) => T

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:62:14
   |
62 |     let y1 = nonWidening(`foo${s}`);
   |              ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:63:26
   |
63 |     let y2 = nonWidening(cond ? 'a' : `foo${s}`);
   |                          ^^^^
   |
   = note: boolean

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:63:45
   |
63 |     let y2 = nonWidening(cond ? 'a' : `foo${s}`);
   |                                             ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:63:39
   |
63 |     let y2 = nonWidening(cond ? 'a' : `foo${s}`);
   |                                       ^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:63:26
   |
63 |     let y2 = nonWidening(cond ? 'a' : `foo${s}`);
   |                          ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:63:14
   |
63 |     let y2 = nonWidening(cond ? 'a' : `foo${s}`);
   |              ^^^^^^^^^^^
   |
   = note: <T extends (string | number | symbol)>(x: T) => T

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:63:14
   |
63 |     let y2 = nonWidening(cond ? 'a' : `foo${s}`);
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:69:22
   |
69 |     let x1: string = t;
   |                      ^
   |
   = note: `foo${number}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:70:22
   |
70 |     let x2: String = t;
   |                      ^
   |
   = note: `foo${number}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:71:22
   |
71 |     let x3: Object = t;
   |                      ^
   |
   = note: `foo${number}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:72:18
   |
72 |     let x4: {} = t;
   |                  ^
   |
   = note: `foo${number}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:73:34
   |
73 |     let x6: { length: number } = t;
   |                                  ^
   |
   = note: `foo${number}`

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:80:24
   |
80 |     let x1 = g1(`xyz-${s}`);  // string
   |                        ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:80:17
   |
80 |     let x1 = g1(`xyz-${s}`);  // string
   |                 ^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:80:14
   |
80 |     let x1 = g1(`xyz-${s}`);  // string
   |              ^^
   |
   = note: <T>(x: T) => T

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:80:14
   |
80 |     let x1 = g1(`xyz-${s}`);  // string
   |              ^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:81:24
   |
81 |     let x2 = g2(`xyz-${s}`);  // `xyz-${string}`
   |                        ^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:81:17
   |
81 |     let x2 = g2(`xyz-${s}`);  // `xyz-${string}`
   |                 ^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:81:14
   |
81 |     let x2 = g2(`xyz-${s}`);  // `xyz-${string}`
   |              ^^
   |
   = note: <T extends string>(x: T) => T

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:81:14
   |
81 |     let x2 = g2(`xyz-${s}`);  // `xyz-${string}`
   |              ^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:88:12
   |
88 | const t1 = takesLiteral("foo.bar.baz"); // "baz"
   |            ^^^^^^^^^^^^
   |
   = note: <T extends string>(literal: T) => T extends `foo.bar.${infer R}` ? R : unknown

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:88:12
   |
88 | const t1 = takesLiteral("foo.bar.baz"); // "baz"
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: "foo.bar.baz" extends `foo.bar.${infer R}` ? {
           } : unknown

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:90:25
   |
90 | const t2 = takesLiteral(id2); // "baz"
   |                         ^^^
   |
   = note: "foo.bar.baz"

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:90:12
   |
90 | const t2 = takesLiteral(id2); // "baz"
   |            ^^^^^^^^^^^^
   |
   = note: <T extends string>(literal: T) => T extends `foo.bar.${infer R}` ? R : unknown

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:90:12
   |
90 | const t2 = takesLiteral(id2); // "baz"
   |            ^^^^^^^^^^^^^^^^^
   |
   = note: "foo.bar.baz" extends `foo.bar.${infer R}` ? {
           } : unknown

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:93:36
   |
93 | const t3 = takesLiteral(`foo.bar.${someString}`);  // string
   |                                    ^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:93:25
   |
93 | const t3 = takesLiteral(`foo.bar.${someString}`);  // string
   |                         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:93:12
   |
93 | const t3 = takesLiteral(`foo.bar.${someString}`);  // string
   |            ^^^^^^^^^^^^
   |
   = note: <T extends string>(literal: T) => T extends `foo.bar.${infer R}` ? R : unknown

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:93:12
   |
93 | const t3 = takesLiteral(`foo.bar.${someString}`);  // string
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: string extends `foo.bar.${infer R}` ? {
           } : unknown

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:95:24
   |
95 | const id4 = `foo.bar.${someString}`;
   |                        ^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:95:13
   |
95 | const id4 = `foo.bar.${someString}`;
   |             ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:96:25
   |
96 | const t4 = takesLiteral(id4);  // unknown
   |                         ^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:96:12
   |
96 | const t4 = takesLiteral(id4);  // unknown
   |            ^^^^^^^^^^^^
   |
   = note: <T extends string>(literal: T) => T extends `foo.bar.${infer R}` ? R : unknown

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:96:12
   |
96 | const t4 = takesLiteral(id4);  // unknown
   |            ^^^^^^^^^^^^^^^^^
   |
   = note: string extends `foo.bar.${infer R}` ? {
           } : unknown

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:99:36
   |
99 | const t5 = takesLiteral(`foo.bar.${someUnion}`);  // "abc" | "def" | "ghi"
   |                                    ^^^^^^^^^
   |
   = note: ('abc' | 'def' | 'ghi')

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:99:25
   |
99 | const t5 = takesLiteral(`foo.bar.${someUnion}`);  // "abc" | "def" | "ghi"
   |                         ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: string

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:99:12
   |
99 | const t5 = takesLiteral(`foo.bar.${someUnion}`);  // "abc" | "def" | "ghi"
   |            ^^^^^^^^^^^^
   |
   = note: <T extends string>(literal: T) => T extends `foo.bar.${infer R}` ? R : unknown

warning: Type
  --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:99:12
   |
99 | const t5 = takesLiteral(`foo.bar.${someUnion}`);  // "abc" | "def" | "ghi"
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: string extends `foo.bar.${infer R}` ? {
           } : unknown

warning: Type
   --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:107:37
    |
107 | const pixelString: PixelValueType = `22px`;
    |                                     ^^^^^^
    |
    = note: "22px"

warning: Type
   --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:109:52
    |
109 | const pixelStringWithTemplate: PixelValueType = `${pixelValue}px`;
    |                                                    ^^^^^^^^^^
    |
    = note: number

warning: Type
   --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:109:49
    |
109 | const pixelStringWithTemplate: PixelValueType = `${pixelValue}px`;
    |                                                 ^^^^^^^^^^^^^^^^^
    |
    = note: `${number}px`

warning: Type
   --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:114:20
    |
114 |     return `test-${title}`;
    |                    ^^^^^
    |
    = note: string

warning: Type
   --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:114:12
    |
114 |     return `test-${title}`;
    |            ^^^^^^^^^^^^^^^
    |
    = note: `test-${string}`

warning: Type
   --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:119:27
    |
119 | const interpolatedStyle = { rotate: 12 };
    |                           ^^^^^^^^^^^^^^
    |
    = note: {
                rotate: 12;
            }

warning: Type
   --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:121:14
    |
121 | C2(`rotate(${interpolatedStyle.rotate}dig)`);
    |              ^^^^^^^^^^^^^^^^^
    |
    = note: {
                rotate: number;
            }

warning: Type
   --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:121:14
    |
121 | C2(`rotate(${interpolatedStyle.rotate}dig)`);
    |              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: number

warning: Type
   --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:121:4
    |
121 | C2(`rotate(${interpolatedStyle.rotate}dig)`);
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: string

warning: Type
   --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:121:1
    |
121 | C2(`rotate(${interpolatedStyle.rotate}dig)`);
    | ^^
    |
    = note: (transform: ("-moz-initial" | (string & {
            }))) => number

warning: Type
   --> $DIR/tests/visualize/types/literal/templateLiteralTypes2.ts:121:1
    |
121 | C2(`rotate(${interpolatedStyle.rotate}dig)`);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: number

