
  x Type
   ,-[$DIR/tests/visualize/types/literal/templateLiteralTypes2/3.ts:7:1]
 7 | export const t3 = takesLiteral(`foo.bar.${someString}`);  // string
   :                   ^^^^^^^^^^^^
   `----

Error: 
  > <T extends string>(literal: T) => T extends `foo.bar.${infer R}` ? R : unknown

  x Type
   ,-[$DIR/tests/visualize/types/literal/templateLiteralTypes2/3.ts:7:1]
 7 | export const t3 = takesLiteral(`foo.bar.${someString}`);  // string
   :                                           ^^^^^^^^^^
   `----

Error: 
  > string

  x Type
   ,-[$DIR/tests/visualize/types/literal/templateLiteralTypes2/3.ts:7:1]
 7 | export const t3 = takesLiteral(`foo.bar.${someString}`);  // string
   :                                ^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > `foo.bar.${string}`

  x Type
   ,-[$DIR/tests/visualize/types/literal/templateLiteralTypes2/3.ts:7:1]
 7 | export const t3 = takesLiteral(`foo.bar.${someString}`);  // string
   :                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > string
