
  x Type
   ,-[$DIR/tests/visualize/types/literal/templateLiteralTypes2/1.ts:6:1]
 6 | export const t1 = takesLiteral("foo.bar.baz"); // "baz"
   :                   ^^^^^^^^^^^^
   `----

Error: 
  > <T extends string>(literal: T) => T extends `foo.bar.${infer R}` ? R : unknown

  x Type
   ,-[$DIR/tests/visualize/types/literal/templateLiteralTypes2/1.ts:6:1]
 6 | export const t1 = takesLiteral("foo.bar.baz"); // "baz"
   :                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > "baz"
