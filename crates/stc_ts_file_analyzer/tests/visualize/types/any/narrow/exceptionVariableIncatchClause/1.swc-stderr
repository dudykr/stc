
  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:8:1]
  8 | 
  9 |     if (isFooError(err)) {
    :         ^^^^^^^^^^
 10 |       err.dontPanic(); // OK
    `----

Error: 
  > (x: any) => x is {
  |     type: "foo";
  |     dontPanic();
  | }

  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:8:1]
  8 | 
  9 |     if (isFooError(err)) {
    :                    ^^^
 10 |       err.dontPanic(); // OK
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:8:1]
  8 | 
  9 |     if (isFooError(err)) {
    :         ^^^^^^^^^^^^^^^
 10 |       err.dontPanic(); // OK
    `----

Error: 
  > x is {
  |     type: "foo";
  |     dontPanic();
  | }

  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:9:1]
  9 |     if (isFooError(err)) {
 10 |       err.dontPanic(); // OK
    :       ^^^
 11 |       err.doPanic(); // ERROR: Property 'doPanic' does not exist on type '{...}'
    `----

Error: 
  > {
  |     type: "foo";
  |     dontPanic();
  | }

  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:9:1]
  9 |     if (isFooError(err)) {
 10 |       err.dontPanic(); // OK
    :       ^^^^^^^^^^^^^^^
 11 |       err.doPanic(); // ERROR: Property 'doPanic' does not exist on type '{...}'
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:10:1]
 10 |       err.dontPanic(); // OK
 11 |       err.doPanic(); // ERROR: Property 'doPanic' does not exist on type '{...}'
    :       ^^^
 12 |     } else if (err instanceof Error) {
    `----

Error: 
  > {
  |     type: "foo";
  |     dontPanic();
  | }

  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:11:1]
 11 |       err.doPanic(); // ERROR: Property 'doPanic' does not exist on type '{...}'
 12 |     } else if (err instanceof Error) {
    :                ^^^
 13 |       err.message;
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:11:1]
 11 |       err.doPanic(); // ERROR: Property 'doPanic' does not exist on type '{...}'
 12 |     } else if (err instanceof Error) {
    :                               ^^^^^
 13 |       err.message;
    `----

Error: 
  > ErrorConstructor

  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:11:1]
 11 |       err.doPanic(); // ERROR: Property 'doPanic' does not exist on type '{...}'
 12 |     } else if (err instanceof Error) {
    :                ^^^^^^^^^^^^^^^^^^^^
 13 |       err.message;
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:12:1]
 12 |     } else if (err instanceof Error) {
 13 |       err.message;
    :       ^^^
 14 |       err.massage; // ERROR: Property 'massage' does not exist on type 'Error'
    `----

Error: 
  > Error

  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:12:1]
 12 |     } else if (err instanceof Error) {
 13 |       err.message;
    :       ^^^^^^^^^^^
 14 |       err.massage; // ERROR: Property 'massage' does not exist on type 'Error'
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:13:1]
 13 |       err.message;
 14 |       err.massage; // ERROR: Property 'massage' does not exist on type 'Error'
    :       ^^^
 15 |     } else {
    `----

Error: 
  > Error

  x Type
    ,-[$DIR/tests/visualize/types/any/narrow/exceptionVariableIncatchClause/1.ts:15:1]
 15 |     } else {
 16 |       throw err;
    :             ^^^
 17 |     }
    `----

Error: 
  > any
