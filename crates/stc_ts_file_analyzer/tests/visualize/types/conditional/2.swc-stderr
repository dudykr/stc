
  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:26:1]
 26 | function f10(part: DeepReadonly<Part>) {
 27 |   let a = part;
    :           ^^^^
 28 |   let b = {} as Part;
    `----

Error: 
  > {
  |     readonly id: DeepReadonly<Part["id"]>;
  |     readonly name: DeepReadonly<Part["name"]>;
  |     readonly subparts: DeepReadonly<Part["subparts"]>;
  | }

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:27:1]
 27 |   let a = part;
 28 |   let b = {} as Part;
    :           ^^
 29 |   let c = {} as DeepReadonly<Part>;
    `----

Error: 
  > {
  | }

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:27:1]
 27 |   let a = part;
 28 |   let b = {} as Part;
    :           ^^^^^^^^^^
 29 |   let c = {} as DeepReadonly<Part>;
    `----

Error: 
  > Part

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:28:1]
 28 |   let b = {} as Part;
 29 |   let c = {} as DeepReadonly<Part>;
    :           ^^
    `----

Error: 
  > {
  | }

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:28:1]
 28 |   let b = {} as Part;
 29 |   let c = {} as DeepReadonly<Part>;
    :           ^^^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > DeepReadonly<Part>

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:30:1]
 30 | 
 31 |   let name: string = part.name;
    :                      ^^^^
 32 |   let id: number = part.subparts[0].id;
    `----

Error: 
  > {
  |     readonly id: DeepReadonly<Part["id"]>;
  |     readonly name: DeepReadonly<Part["name"]>;
  |     readonly subparts: DeepReadonly<Part["subparts"]>;
  | }

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:30:1]
 30 | 
 31 |   let name: string = part.name;
    :                      ^^^^^^^^^
 32 |   let id: number = part.subparts[0].id;
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:31:1]
 31 |   let name: string = part.name;
 32 |   let id: number = part.subparts[0].id;
    :                    ^^^^
 33 |   part.id = part.id; // Error
    `----

Error: 
  > {
  |     readonly id: DeepReadonly<Part["id"]>;
  |     readonly name: DeepReadonly<Part["name"]>;
  |     readonly subparts: DeepReadonly<Part["subparts"]>;
  | }

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:31:1]
 31 |   let name: string = part.name;
 32 |   let id: number = part.subparts[0].id;
    :                    ^^^^^^^^^^^^^
 33 |   part.id = part.id; // Error
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:31:1]
 31 |   let name: string = part.name;
 32 |   let id: number = part.subparts[0].id;
    :                    ^^^^^^^^^^^^^^^^
 33 |   part.id = part.id; // Error
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:31:1]
 31 |   let name: string = part.name;
 32 |   let id: number = part.subparts[0].id;
    :                    ^^^^^^^^^^^^^^^^^^^
 33 |   part.id = part.id; // Error
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:32:1]
 32 |   let id: number = part.subparts[0].id;
 33 |   part.id = part.id; // Error
    :   ^^^^
 34 |   part.updatePart("hello"); // Error
    `----

Error: 
  > {
  |     readonly id: DeepReadonly<Part["id"]>;
  |     readonly name: DeepReadonly<Part["name"]>;
  |     readonly subparts: DeepReadonly<Part["subparts"]>;
  | }

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:32:1]
 32 |   let id: number = part.subparts[0].id;
 33 |   part.id = part.id; // Error
    :             ^^^^
 34 |   part.updatePart("hello"); // Error
    `----

Error: 
  > {
  |     readonly id: DeepReadonly<Part["id"]>;
  |     readonly name: DeepReadonly<Part["name"]>;
  |     readonly subparts: DeepReadonly<Part["subparts"]>;
  | }

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:32:1]
 32 |   let id: number = part.subparts[0].id;
 33 |   part.id = part.id; // Error
    :             ^^^^^^^
 34 |   part.updatePart("hello"); // Error
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:32:1]
 32 |   let id: number = part.subparts[0].id;
 33 |   part.id = part.id; // Error
    :   ^^^^^^^^^^^^^^^^^
 34 |   part.updatePart("hello"); // Error
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/visualize/types/conditional/2.ts:33:1]
 33 |   part.id = part.id; // Error
 34 |   part.updatePart("hello"); // Error
    :   ^^^^
 35 | }
    `----

Error: 
  > {
  |     readonly id: DeepReadonly<Part["id"]>;
  |     readonly name: DeepReadonly<Part["name"]>;
  |     readonly subparts: DeepReadonly<Part["subparts"]>;
  | }
