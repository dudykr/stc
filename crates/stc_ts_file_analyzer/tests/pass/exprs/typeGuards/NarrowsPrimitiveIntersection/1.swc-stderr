
  x Type
   ,-[$DIR/tests/pass/exprs/typeGuards/NarrowsPrimitiveIntersection/1.ts:1:1]
 1 | type Tag = { __tag: any };
   :      ^^^
 2 | declare function isNonBlank(value: string): value is string & Tag;
   `----

Error: 
  > {
  |     __tag: any;
  | }

  x Type
   ,-[$DIR/tests/pass/exprs/typeGuards/NarrowsPrimitiveIntersection/1.ts:5:1]
 5 | let value: string = "asdf";
 6 | if (isNonBlank(value)) {
   :     ^^^^^^^^^^
 7 |   doThis(value);
   `----

Error: 
  > (value: string) => value is (string & Tag)

  x Type
   ,-[$DIR/tests/pass/exprs/typeGuards/NarrowsPrimitiveIntersection/1.ts:5:1]
 5 | let value: string = "asdf";
 6 | if (isNonBlank(value)) {
   :                ^^^^^
 7 |   doThis(value);
   `----

Error: 
  > string

  x Type
   ,-[$DIR/tests/pass/exprs/typeGuards/NarrowsPrimitiveIntersection/1.ts:5:1]
 5 | let value: string = "asdf";
 6 | if (isNonBlank(value)) {
   :     ^^^^^^^^^^^^^^^^^
 7 |   doThis(value);
   `----

Error: 
  > value is (string & Tag)

  x Type
   ,-[$DIR/tests/pass/exprs/typeGuards/NarrowsPrimitiveIntersection/1.ts:6:1]
 6 | if (isNonBlank(value)) {
 7 |   doThis(value);
   :   ^^^^^^
 8 | } else {
   `----

Error: 
  > (value: (string & Tag)) => void

  x Type
   ,-[$DIR/tests/pass/exprs/typeGuards/NarrowsPrimitiveIntersection/1.ts:6:1]
 6 | if (isNonBlank(value)) {
 7 |   doThis(value);
   :          ^^^^^
 8 | } else {
   `----

Error: 
  > (string & {
  |     __tag: any;
  | })

  x Type
   ,-[$DIR/tests/pass/exprs/typeGuards/NarrowsPrimitiveIntersection/1.ts:6:1]
 6 | if (isNonBlank(value)) {
 7 |   doThis(value);
   :   ^^^^^^^^^^^^^
 8 | } else {
   `----

Error: 
  > void

  x Type
    ,-[$DIR/tests/pass/exprs/typeGuards/NarrowsPrimitiveIntersection/1.ts:8:1]
  8 | } else {
  9 |   doThat(value);
    :   ^^^^^^
 10 | }
    `----

Error: 
  > (value: string) => void

  x Type
    ,-[$DIR/tests/pass/exprs/typeGuards/NarrowsPrimitiveIntersection/1.ts:8:1]
  8 | } else {
  9 |   doThat(value);
    :          ^^^^^
 10 | }
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/exprs/typeGuards/NarrowsPrimitiveIntersection/1.ts:8:1]
  8 | } else {
  9 |   doThat(value);
    :   ^^^^^^^^^^^^^
 10 | }
    `----

Error: 
  > void
