
  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:11:5]
 11 | x;  // number
    : ^
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:12:5]
 12 | while (cond) {
    :        ^^^^
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:13:9]
 13 | x;  // number, then string | number
    : ^
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:14:9]
 14 | x = typeof x === "string" ? x.slice() : "abc";
    :            ^
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:14:9]
 14 | x = typeof x === "string" ? x.slice() : "abc";
    :     ^^^^^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:14:9]
 14 | x = typeof x === "string" ? x.slice() : "abc";
    :     ^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:14:9]
 14 | x = typeof x === "string" ? x.slice() : "abc";
    :                             ^
    `----

Error: 
  > never

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:14:9]
 14 | x = typeof x === "string" ? x.slice() : "abc";
    :     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > (any | "abc")

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:14:9]
 14 | x = typeof x === "string" ? x.slice() : "abc";
    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > (any | "abc")

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:15:9]
 15 | x;  // string
    : ^
    `----

Error: 
  > (string | number | boolean)

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:13:9]
 13 | x;  // number, then string | number
    : ^
    `----

Error: 
  > (string | number | boolean)

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:14:9]
 14 | x = typeof x === "string" ? x.slice() : "abc";
    :            ^
    `----

Error: 
  > (string | number | boolean)

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:14:9]
 14 | x = typeof x === "string" ? x.slice() : "abc";
    :                             ^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:14:9]
 14 | x = typeof x === "string" ? x.slice() : "abc";
    :                             ^^^^^^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:14:9]
 14 | x = typeof x === "string" ? x.slice() : "abc";
    :     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > (string | "abc")

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:14:9]
 14 | x = typeof x === "string" ? x.slice() : "abc";
    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > (string | "abc")

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:15:9]
 15 | x;  // string
    : ^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/1.ts:17:5]
 17 | x;
    : ^
    `----

Error: 
  > (string | number)
