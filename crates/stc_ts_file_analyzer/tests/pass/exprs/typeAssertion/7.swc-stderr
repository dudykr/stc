
  x Type
   ,-[$DIR/tests/pass/exprs/typeAssertion/7.ts:6:5]
 6 | if (typeof x === "string" && typeof x === "number") {
   :            ^
   `----

Error: 
  > (string | number)

  x Type
   ,-[$DIR/tests/pass/exprs/typeAssertion/7.ts:6:5]
 6 | if (typeof x === "string" && typeof x === "number") {
   :     ^^^^^^^^
   `----

Error: 
  > string

  x Type
   ,-[$DIR/tests/pass/exprs/typeAssertion/7.ts:6:5]
 6 | if (typeof x === "string" && typeof x === "number") {
   :     ^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > boolean

  x Type
   ,-[$DIR/tests/pass/exprs/typeAssertion/7.ts:6:5]
 6 | if (typeof x === "string" && typeof x === "number") {
   :                                     ^
   `----

Error: 
  > string

  x Type
   ,-[$DIR/tests/pass/exprs/typeAssertion/7.ts:6:5]
 6 | if (typeof x === "string" && typeof x === "number") {
   :                              ^^^^^^^^
   `----

Error: 
  > string

  x Type
   ,-[$DIR/tests/pass/exprs/typeAssertion/7.ts:6:5]
 6 | if (typeof x === "string" && typeof x === "number") {
   :                              ^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > boolean

  x Type
   ,-[$DIR/tests/pass/exprs/typeAssertion/7.ts:6:5]
 6 | if (typeof x === "string" && typeof x === "number") {
   :     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > boolean

  x Type
   ,-[$DIR/tests/pass/exprs/typeAssertion/7.ts:7:9]
 7 | x;  // number (guard as assertion)
   : ^
   `----

Error: 
  > never

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/7.ts:10:9]
 10 | x;  // string | number
    : ^
    `----

Error: 
  > (string | number)

  x Type
    ,-[$DIR/tests/pass/exprs/typeAssertion/7.ts:12:5]
 12 | x;  // string | number
    : ^
    `----

Error: 
  > (string | number)
