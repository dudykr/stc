
  x Type
   ,-[$DIR/tests/pass/exprs/assign/objectPat/4.ts:2:1]
 2 | 
 3 | type Item = { a: string, b: number, c: boolean };
   :      ^^^^
   `----

Error: 
  > {
  |     a: string;
  |     b: number;
  |     c: boolean;
  | }

  x Type
   ,-[$DIR/tests/pass/exprs/assign/objectPat/4.ts:5:1]
 5 | function f4<K1 extends keyof Item, K2 extends keyof Item>(obj: Item, k1: K1, k2: K2) {
 6 |     let { [k1]: a1, [k2]: a2, ...r1 } = obj;
   :                                         ^^^
 7 | }
   `----

Error: 
  > {
  |     a: string;
  |     b: number;
  |     c: boolean;
  | }

  x Type
   ,-[$DIR/tests/pass/exprs/assign/objectPat/4.ts:5:1]
 5 | function f4<K1 extends keyof Item, K2 extends keyof Item>(obj: Item, k1: K1, k2: K2) {
 6 |     let { [k1]: a1, [k2]: a2, ...r1 } = obj;
   :            ^^
 7 | }
   `----

Error: 
  > K1

  x Type
   ,-[$DIR/tests/pass/exprs/assign/objectPat/4.ts:5:1]
 5 | function f4<K1 extends keyof Item, K2 extends keyof Item>(obj: Item, k1: K1, k2: K2) {
 6 |     let { [k1]: a1, [k2]: a2, ...r1 } = obj;
   :                      ^^
 7 | }
   `----

Error: 
  > K2
