
  x Type
    ,-[$DIR/tests/pass/exprs/lit/string/tags-1.ts:21:5]
 21 | return entity.kind === kind;
    :        ^^^^^^
    `----

Error: 
  > Entity

  x Type
    ,-[$DIR/tests/pass/exprs/lit/string/tags-1.ts:21:5]
 21 | return entity.kind === kind;
    :        ^^^^^^^^^^^
    `----

Error: 
  > ("A" | "B")

  x Type
    ,-[$DIR/tests/pass/exprs/lit/string/tags-1.ts:21:5]
 21 | return entity.kind === kind;
    :                        ^^^^
    `----

Error: 
  > ("A" | "B")

  x Type
    ,-[$DIR/tests/pass/exprs/lit/string/tags-1.ts:21:5]
 21 | return entity.kind === kind;
    :        ^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/exprs/lit/string/tags-1.ts:24:1]
 24 | ,-> let x: A = {
 25 | |       kind: "A",
 26 | |       a: 100,
 27 | `-> }
    `----

Error: 
  > {
  |     kind: "A";
  |     a: 100;
  | }

  x Type
    ,-[$DIR/tests/pass/exprs/lit/string/tags-1.ts:29:1]
 29 | if (!hasKind(x, "B")) {
    :              ^
    `----

Error: 
  > A

  x Type
    ,-[$DIR/tests/pass/exprs/lit/string/tags-1.ts:29:1]
 29 | if (!hasKind(x, "B")) {
    :      ^^^^^^^
    `----

Error: 
  > ((entity: Entity, kind: "A") => entity is A | (entity: Entity, kind: "B") => entity is B | (entity: Entity, kind: Kind) => entity is Entity | (entity: Entity, kind: Kind) => boolean)

  x Type
    ,-[$DIR/tests/pass/exprs/lit/string/tags-1.ts:29:1]
 29 | if (!hasKind(x, "B")) {
    :      ^^^^^^^^^^^^^^^
    `----

Error: 
  > entity is B

  x Type
    ,-[$DIR/tests/pass/exprs/lit/string/tags-1.ts:29:1]
 29 | if (!hasKind(x, "B")) {
    :     ^^^^^^^^^^^^^^^^
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/exprs/lit/string/tags-1.ts:30:5]
 30 | let c = x;
    :         ^
    `----

Error: 
  > A
