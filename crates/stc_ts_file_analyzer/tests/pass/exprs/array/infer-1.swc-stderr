
  x Type
   ,-[$DIR/tests/pass/exprs/array/infer-1.ts:1:1]
 1 | declare function foo<T>(...args: T[]): T[];
 2 | export let b1: { x: boolean }[] = foo({ x: true }, { x: false });
   :                                   ^^^
   `----

Error: 
  > <T>(...args: T[]) => T[]

  x Type
   ,-[$DIR/tests/pass/exprs/array/infer-1.ts:1:1]
 1 | declare function foo<T>(...args: T[]): T[];
 2 | export let b1: { x: boolean }[] = foo({ x: true }, { x: false });
   :                                       ^^^^^^^^^^^
   `----

Error: 
  > {
  |     x: true;
  | }

  x Type
   ,-[$DIR/tests/pass/exprs/array/infer-1.ts:1:1]
 1 | declare function foo<T>(...args: T[]): T[];
 2 | export let b1: { x: boolean }[] = foo({ x: true }, { x: false });
   :                                                    ^^^^^^^^^^^^
   `----

Error: 
  > {
  |     x: false;
  | }

  x Type
   ,-[$DIR/tests/pass/exprs/array/infer-1.ts:1:1]
 1 | declare function foo<T>(...args: T[]): T[];
 2 | export let b1: { x: boolean }[] = foo({ x: true }, { x: false });
   :                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > (({
  |     x: true;
  | } | {
  |     x: false;
  | }))[]
