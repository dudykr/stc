
  x Type
   ,-[$DIR/tests/pass/types/alias/base-1-2.ts:3:1]
 3 | class C7 { x: boolean }
 4 | type T7 = C7;
   :      ^^
 5 | var x7: C7;
   `----

Error: 
  > C7

  x Type
   ,-[$DIR/tests/pass/types/alias/base-1-2.ts:7:1]
 7 | 
 8 | type T8 = string | boolean;
   :      ^^
 9 | var x8: string | boolean;
   `----

Error: 
  > (string | boolean)

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:11:1]
 11 | 
 12 | type T9 = () => string;
    :      ^^
 13 | var x9: () => string;
    `----

Error: 
  > () => string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:15:1]
 15 | 
 16 | type T10 = { x: number };
    :      ^^^
 17 | var x10: { x: number };
    `----

Error: 
  > {
  |     x: number;
  | }

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:19:1]
 19 | 
 20 | type T11 = { new(): boolean };
    :      ^^^
 21 | var x11: { new(): boolean };
    `----

Error: 
  > {
  |     new(): boolean;
  | }

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:24:1]
 24 | interface I13 { x: string };
 25 | type T13 = I13;
    :      ^^^
 26 | var x13_1: I13;
    `----

Error: 
  > I13

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:28:1]
 28 | 
 29 | x13_1.x
    : ^^^^^
 30 | x13_2.x
    `----

Error: 
  > I13

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:28:1]
 28 | 
 29 | x13_1.x
    : ^^^^^^^
 30 | x13_2.x
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:29:1]
 29 | x13_1.x
 30 | x13_2.x
    : ^^^^^
    `----

Error: 
  > I13

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:29:1]
 29 | x13_1.x
 30 | x13_2.x
    : ^^^^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:32:1]
 32 | declare function foo13<T1 extends I13, T2 extends T13>(t1: T1, t2: T13): void;
 33 | foo13(x13_1, x13_2);
    : ^^^^^
 34 | foo13(x13_2, x13_1);
    `----

Error: 
  > <T1 extends I13, T2 extends T13>(t1: T1, t2: T13) => void

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:32:1]
 32 | declare function foo13<T1 extends I13, T2 extends T13>(t1: T1, t2: T13): void;
 33 | foo13(x13_1, x13_2);
    :       ^^^^^
 34 | foo13(x13_2, x13_1);
    `----

Error: 
  > I13

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:32:1]
 32 | declare function foo13<T1 extends I13, T2 extends T13>(t1: T1, t2: T13): void;
 33 | foo13(x13_1, x13_2);
    :              ^^^^^
 34 | foo13(x13_2, x13_1);
    `----

Error: 
  > I13

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:32:1]
 32 | declare function foo13<T1 extends I13, T2 extends T13>(t1: T1, t2: T13): void;
 33 | foo13(x13_1, x13_2);
    : ^^^^^^^^^^^^^^^^^^^
 34 | foo13(x13_2, x13_1);
    `----

Error: 
  > void

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:33:1]
 33 | foo13(x13_1, x13_2);
 34 | foo13(x13_2, x13_1);
    : ^^^^^
    `----

Error: 
  > <T1 extends I13, T2 extends T13>(t1: T1, t2: T13) => void

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:33:1]
 33 | foo13(x13_1, x13_2);
 34 | foo13(x13_2, x13_1);
    :       ^^^^^
    `----

Error: 
  > I13

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:33:1]
 33 | foo13(x13_1, x13_2);
 34 | foo13(x13_2, x13_1);
    :              ^^^^^
    `----

Error: 
  > I13

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:33:1]
 33 | foo13(x13_1, x13_2);
 34 | foo13(x13_2, x13_1);
    : ^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > void

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:35:1]
 35 | 
 36 | type T14 = string;
    :      ^^^
 37 | var x14: T14;
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:43:1]
 43 | 
 44 | type Meters = number
    :      ^^^^^^
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:49:1]
 49 | declare function f15(a: Meters): string;
 50 | f15(E.x).toLowerCase();
    : ^^^
    `----

Error: 
  > ((a: string) => boolean | (a: Meters) => string)

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:49:1]
 49 | declare function f15(a: Meters): string;
 50 | f15(E.x).toLowerCase();
    :     ^
    `----

Error: 
  > E

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:49:1]
 49 | declare function f15(a: Meters): string;
 50 | f15(E.x).toLowerCase();
    :     ^^^
    `----

Error: 
  > E.x

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:49:1]
 49 | declare function f15(a: Meters): string;
 50 | f15(E.x).toLowerCase();
    : ^^^^^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:49:1]
 49 | declare function f15(a: Meters): string;
 50 | f15(E.x).toLowerCase();
    : ^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:51:1]
 51 | 
 52 | type StringAndBoolean = [string, boolean]
    :      ^^^^^^^^^^^^^^^^
 53 | declare function f16(s: StringAndBoolean): string;
    `----

Error: 
  > [string, boolean]

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:54:1]
 54 | var x: [string, boolean];
 55 | f16(x);
    : ^^^
    `----

Error: 
  > (s: StringAndBoolean) => string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:54:1]
 54 | var x: [string, boolean];
 55 | f16(x);
    :     ^
    `----

Error: 
  > [string, boolean]

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:54:1]
 54 | var x: [string, boolean];
 55 | f16(x);
    : ^^^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:56:1]
 56 | 
 57 | var y: StringAndBoolean = ["1", false];
    :                           ^^^^^^^^^^^^
 58 | y[0].toLowerCase();
    `----

Error: 
  > ["1", false]

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:57:1]
 57 | var y: StringAndBoolean = ["1", false];
 58 | y[0].toLowerCase();
    : ^
    `----

Error: 
  > [string, boolean]

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:57:1]
 57 | var y: StringAndBoolean = ["1", false];
 58 | y[0].toLowerCase();
    : ^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2.ts:57:1]
 57 | var y: StringAndBoolean = ["1", false];
 58 | y[0].toLowerCase();
    : ^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > string
