
  x Type
   ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:1:1]
 1 | interface I13 { x: string };
 2 | type T13 = I13;
   :      ^^^
 3 | var x13_1: I13;
   `----

Error: 
  > I13

  x Type
   ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:5:1]
 5 | 
 6 | x13_1.x
   : ^^^^^
 7 | x13_2.x
   `----

Error: 
  > I13

  x Type
   ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:5:1]
 5 | 
 6 | x13_1.x
   : ^^^^^^^
 7 | x13_2.x
   `----

Error: 
  > string

  x Type
   ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:6:1]
 6 | x13_1.x
 7 | x13_2.x
   : ^^^^^
   `----

Error: 
  > I13

  x Type
   ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:6:1]
 6 | x13_1.x
 7 | x13_2.x
   : ^^^^^^^
   `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:9:1]
  9 | declare function foo13<T1 extends I13, T2 extends T13>(t1: T1, t2: T13): void;
 10 | foo13(x13_1, x13_2);
    : ^^^^^
 11 | foo13(x13_2, x13_1);
    `----

Error: 
  > <T1 extends I13, T2 extends T13>(t1: T1, t2: T13) => void

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:9:1]
  9 | declare function foo13<T1 extends I13, T2 extends T13>(t1: T1, t2: T13): void;
 10 | foo13(x13_1, x13_2);
    :       ^^^^^
 11 | foo13(x13_2, x13_1);
    `----

Error: 
  > I13

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:9:1]
  9 | declare function foo13<T1 extends I13, T2 extends T13>(t1: T1, t2: T13): void;
 10 | foo13(x13_1, x13_2);
    :              ^^^^^
 11 | foo13(x13_2, x13_1);
    `----

Error: 
  > I13

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:9:1]
  9 | declare function foo13<T1 extends I13, T2 extends T13>(t1: T1, t2: T13): void;
 10 | foo13(x13_1, x13_2);
    : ^^^^^^^^^^^^^^^^^^^
 11 | foo13(x13_2, x13_1);
    `----

Error: 
  > void

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:10:1]
 10 | foo13(x13_1, x13_2);
 11 | foo13(x13_2, x13_1);
    : ^^^^^
    `----

Error: 
  > <T1 extends I13, T2 extends T13>(t1: T1, t2: T13) => void

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:10:1]
 10 | foo13(x13_1, x13_2);
 11 | foo13(x13_2, x13_1);
    :       ^^^^^
    `----

Error: 
  > I13

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:10:1]
 10 | foo13(x13_1, x13_2);
 11 | foo13(x13_2, x13_1);
    :              ^^^^^
    `----

Error: 
  > I13

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:10:1]
 10 | foo13(x13_1, x13_2);
 11 | foo13(x13_2, x13_1);
    : ^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > void

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:12:1]
 12 | 
 13 | type T14 = string;
    :      ^^^
 14 | var x14: T14;
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:20:1]
 20 | 
 21 | type Meters = number
    :      ^^^^^^
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:26:1]
 26 | declare function f15(a: Meters): string;
 27 | f15(E.x).toLowerCase();
    : ^^^
    `----

Error: 
  > ((a: string) => boolean | (a: Meters) => string)

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:26:1]
 26 | declare function f15(a: Meters): string;
 27 | f15(E.x).toLowerCase();
    :     ^
    `----

Error: 
  > E

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:26:1]
 26 | declare function f15(a: Meters): string;
 27 | f15(E.x).toLowerCase();
    :     ^^^
    `----

Error: 
  > E.x

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:26:1]
 26 | declare function f15(a: Meters): string;
 27 | f15(E.x).toLowerCase();
    : ^^^^^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:26:1]
 26 | declare function f15(a: Meters): string;
 27 | f15(E.x).toLowerCase();
    : ^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:28:1]
 28 | 
 29 | type StringAndBoolean = [string, boolean]
    :      ^^^^^^^^^^^^^^^^
 30 | declare function f16(s: StringAndBoolean): string;
    `----

Error: 
  > [string, boolean]

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:31:1]
 31 | var x: [string, boolean];
 32 | f16(x);
    : ^^^
    `----

Error: 
  > (s: StringAndBoolean) => string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:31:1]
 31 | var x: [string, boolean];
 32 | f16(x);
    :     ^
    `----

Error: 
  > [string, boolean]

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:31:1]
 31 | var x: [string, boolean];
 32 | f16(x);
    : ^^^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:33:1]
 33 | 
 34 | var y: StringAndBoolean = ["1", false];
    :                           ^^^^^^^^^^^^
 35 | y[0].toLowerCase();
    `----

Error: 
  > ["1", false]

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:34:1]
 34 | var y: StringAndBoolean = ["1", false];
 35 | y[0].toLowerCase();
    : ^
    `----

Error: 
  > [string, boolean]

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:34:1]
 34 | var y: StringAndBoolean = ["1", false];
 35 | y[0].toLowerCase();
    : ^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/alias/base-1-2-2.ts:34:1]
 34 | var y: StringAndBoolean = ["1", false];
 35 | y[0].toLowerCase();
    : ^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > string
