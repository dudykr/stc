
  x Type
   ,-[$DIR/tests/pass/types/inference/genericContextualTypes1/1.ts:3:1]
 3 | export const arrayMap = <T, U>(f: (x: T) => U) => (a: T[]) => a.map(f);
   :                                                                     ^
   `----

Error: 
  > (x: T) => U

  x Type
   ,-[$DIR/tests/pass/types/inference/genericContextualTypes1/1.ts:3:1]
 3 | export const arrayMap = <T, U>(f: (x: T) => U) => (a: T[]) => a.map(f);
   :                                                               ^
   `----

Error: 
  > T[]

  x Type
   ,-[$DIR/tests/pass/types/inference/genericContextualTypes1/1.ts:3:1]
 3 | export const arrayMap = <T, U>(f: (x: T) => U) => (a: T[]) => a.map(f);
   :                                                               ^^^^^^^^
   `----

Error: 
  > U[]

  x Type
   ,-[$DIR/tests/pass/types/inference/genericContextualTypes1/1.ts:3:1]
 3 | export const arrayMap = <T, U>(f: (x: T) => U) => (a: T[]) => a.map(f);
   :                                                   ^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > (a: T[]) => U[]

  x Type
   ,-[$DIR/tests/pass/types/inference/genericContextualTypes1/1.ts:3:1]
 3 | export const arrayMap = <T, U>(f: (x: T) => U) => (a: T[]) => a.map(f);
   :                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > <T, U>(f: (x: T) => U) => (a: T[]) => U[]
