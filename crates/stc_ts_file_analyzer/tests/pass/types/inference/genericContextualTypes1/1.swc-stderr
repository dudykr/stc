warning: Type
 --> $DIR/tests/pass/types/inference/genericContextualTypes1/1.ts:3:69
  |
3 | export const arrayMap = <T, U>(f: (x: T) => U) => (a: T[]) => a.map(f);
  |                                                                     ^
  |
  = note: (x: T) => U

warning: Type
 --> $DIR/tests/pass/types/inference/genericContextualTypes1/1.ts:3:63
  |
3 | export const arrayMap = <T, U>(f: (x: T) => U) => (a: T[]) => a.map(f);
  |                                                               ^
  |
  = note: T[]

warning: Type
 --> $DIR/tests/pass/types/inference/genericContextualTypes1/1.ts:3:63
  |
3 | export const arrayMap = <T, U>(f: (x: T) => U) => (a: T[]) => a.map(f);
  |                                                               ^^^^^^^^
  |
  = note: U[]

warning: Type
 --> $DIR/tests/pass/types/inference/genericContextualTypes1/1.ts:3:51
  |
3 | export const arrayMap = <T, U>(f: (x: T) => U) => (a: T[]) => a.map(f);
  |                                                   ^^^^^^^^^^^^^^^^^^^^
  |
  = note: (a: T[]) => U[]

warning: Type
 --> $DIR/tests/pass/types/inference/genericContextualTypes1/1.ts:3:25
  |
3 | export const arrayMap = <T, U>(f: (x: T) => U) => (a: T[]) => a.map(f);
  |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: <T, U>(f: (x: T) => U) => (a: T[]) => U[]

