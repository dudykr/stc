
  x Type
   ,-[$DIR/tests/pass/types/inference/genericContextualTypes1/2.ts:2:1]
 2 | 
 3 | export const arrayFilter = <T>(f: (x: T) => boolean) => (a: T[]) => a.filter(f);
   :                                                                     ^
   `----

Error: 
  > T[]

  x Type
   ,-[$DIR/tests/pass/types/inference/genericContextualTypes1/2.ts:2:1]
 2 | 
 3 | export const arrayFilter = <T>(f: (x: T) => boolean) => (a: T[]) => a.filter(f);
   :                                                                              ^
   `----

Error: 
  > (x: T) => boolean

  x Type
   ,-[$DIR/tests/pass/types/inference/genericContextualTypes1/2.ts:2:1]
 2 | 
 3 | export const arrayFilter = <T>(f: (x: T) => boolean) => (a: T[]) => a.filter(f);
   :                                                                     ^^^^^^^^^^^
   `----

Error: 
  > T[]

  x Type
   ,-[$DIR/tests/pass/types/inference/genericContextualTypes1/2.ts:2:1]
 2 | 
 3 | export const arrayFilter = <T>(f: (x: T) => boolean) => (a: T[]) => a.filter(f);
   :                                                         ^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > (a: T[]) => T[]

  x Type
   ,-[$DIR/tests/pass/types/inference/genericContextualTypes1/2.ts:2:1]
 2 | 
 3 | export const arrayFilter = <T>(f: (x: T) => boolean) => (a: T[]) => a.filter(f);
   :                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > <T>(f: (x: T) => boolean) => (a: T[]) => T[]
