
  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-2.ts:2:1]
 2 | declare const a: { m?<B>(obj: { x: B }): B } | undefined;
 3 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   :                                       ^
   `----

Error: 
  > ({
  |     m?<B>(obj: {
  |         x: B;
  |     }): B;
  | } | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-2.ts:2:1]
 2 | declare const a: { m?<B>(obj: { x: B }): B } | undefined;
 3 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   :                                       ^^^^
   `----

Error: 
  > (undefined | <B>(obj: {
  |     x: B;
  | }) => B)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-2.ts:2:1]
 2 | declare const a: { m?<B>(obj: { x: B }): B } | undefined;
 3 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   :                                                   ^^^^^^
   `----

Error: 
  > <A>() => A

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-2.ts:2:1]
 2 | declare const a: { m?<B>(obj: { x: B }): B } | undefined;
 3 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   :                                                   ^^^^^^^^
   `----

Error: 
  > (number | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-2.ts:2:1]
 2 | declare const a: { m?<B>(obj: { x: B }): B } | undefined;
 3 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   :                                              ^^^^^^^^^^^^^^^
   `----

Error: 
  > {
  |     x: (number | undefined);
  | }

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-2.ts:2:1]
 2 | declare const a: { m?<B>(obj: { x: B }): B } | undefined;
 3 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   :                                       ^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > (undefined | number)
