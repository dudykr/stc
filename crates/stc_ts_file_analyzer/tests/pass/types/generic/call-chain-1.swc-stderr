
  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:2:1]
 2 | declare const a: { m?<T>(obj: { x: T }): T } | undefined;
 3 | export const n3: number | undefined = a?.m?.({ x: 12 }); // should be ok
   :                                       ^
 4 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   `----

Error: 
  > ({
  |     m?<T>(obj: {
  |         x: T;
  |     }): T;
  | } | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:2:1]
 2 | declare const a: { m?<T>(obj: { x: T }): T } | undefined;
 3 | export const n3: number | undefined = a?.m?.({ x: 12 }); // should be ok
   :                                       ^^^^
 4 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   `----

Error: 
  > (<T>(obj: {
  |     x: T;
  | }) => T | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:2:1]
 2 | declare const a: { m?<T>(obj: { x: T }): T } | undefined;
 3 | export const n3: number | undefined = a?.m?.({ x: 12 }); // should be ok
   :                                              ^^^^^^^^^
 4 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   `----

Error: 
  > {
  |     x: 12;
  | }

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:2:1]
 2 | declare const a: { m?<T>(obj: { x: T }): T } | undefined;
 3 | export const n3: number | undefined = a?.m?.({ x: 12 }); // should be ok
   :                                       ^^^^^^^^^^^^^^^^^
 4 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   `----

Error: 
  > (12 | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:3:1]
 3 | export const n3: number | undefined = a?.m?.({ x: 12 }); // should be ok
 4 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   :                                       ^
   `----

Error: 
  > ({
  |     m?<T>(obj: {
  |         x: T;
  |     }): T;
  | } | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:3:1]
 3 | export const n3: number | undefined = a?.m?.({ x: 12 }); // should be ok
 4 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   :                                       ^^^^
   `----

Error: 
  > (<T>(obj: {
  |     x: T;
  | }) => T | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:3:1]
 3 | export const n3: number | undefined = a?.m?.({ x: 12 }); // should be ok
 4 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   :                                                   ^^^^^^
   `----

Error: 
  > <T>() => T

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:3:1]
 3 | export const n3: number | undefined = a?.m?.({ x: 12 }); // should be ok
 4 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   :                                                   ^^^^^^^^
   `----

Error: 
  > (number | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:3:1]
 3 | export const n3: number | undefined = a?.m?.({ x: 12 }); // should be ok
 4 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   :                                              ^^^^^^^^^^^^^^^
   `----

Error: 
  > {
  |     x: (number | undefined);
  | }

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:3:1]
 3 | export const n3: number | undefined = a?.m?.({ x: 12 }); // should be ok
 4 | export const n4: number | undefined = a?.m?.({ x: absorb() }); // likewise
   :                                       ^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > (number | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:6:1]
 6 | // Also a test showing `!` vs `?` for good measure
 7 | export let t1: 12 | undefined = a?.m?.({ x: 12 });
   :                                 ^
 8 | t1 = a!.m!({ x: 12 });
   `----

Error: 
  > ({
  |     m?<T>(obj: {
  |         x: T;
  |     }): T;
  | } | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:6:1]
 6 | // Also a test showing `!` vs `?` for good measure
 7 | export let t1: 12 | undefined = a?.m?.({ x: 12 });
   :                                 ^^^^
 8 | t1 = a!.m!({ x: 12 });
   `----

Error: 
  > (<T>(obj: {
  |     x: T;
  | }) => T | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:6:1]
 6 | // Also a test showing `!` vs `?` for good measure
 7 | export let t1: 12 | undefined = a?.m?.({ x: 12 });
   :                                        ^^^^^^^^^
 8 | t1 = a!.m!({ x: 12 });
   `----

Error: 
  > {
  |     x: 12;
  | }

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:6:1]
 6 | // Also a test showing `!` vs `?` for good measure
 7 | export let t1: 12 | undefined = a?.m?.({ x: 12 });
   :                                 ^^^^^^^^^^^^^^^^^
 8 | t1 = a!.m!({ x: 12 });
   `----

Error: 
  > (12 | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:7:1]
 7 | export let t1: 12 | undefined = a?.m?.({ x: 12 });
 8 | t1 = a!.m!({ x: 12 });
   :      ^
   `----

Error: 
  > ({
  |     m?<T>(obj: {
  |         x: T;
  |     }): T;
  | } | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:7:1]
 7 | export let t1: 12 | undefined = a?.m?.({ x: 12 });
 8 | t1 = a!.m!({ x: 12 });
   :      ^^
   `----

Error: 
  > {
  |     m?<T>(obj: {
  |         x: T;
  |     }): T;
  | }

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:7:1]
 7 | export let t1: 12 | undefined = a?.m?.({ x: 12 });
 8 | t1 = a!.m!({ x: 12 });
   :      ^^^^
   `----

Error: 
  > (<T>(obj: {
  |     x: T;
  | }) => T | undefined)

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:7:1]
 7 | export let t1: 12 | undefined = a?.m?.({ x: 12 });
 8 | t1 = a!.m!({ x: 12 });
   :      ^^^^^
   `----

Error: 
  > <T>(obj: {
  |     x: T;
  | }) => T

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:7:1]
 7 | export let t1: 12 | undefined = a?.m?.({ x: 12 });
 8 | t1 = a!.m!({ x: 12 });
   :            ^^^^^^^^^
   `----

Error: 
  > {
  |     x: 12;
  | }

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:7:1]
 7 | export let t1: 12 | undefined = a?.m?.({ x: 12 });
 8 | t1 = a!.m!({ x: 12 });
   :      ^^^^^^^^^^^^^^^^
   `----

Error: 
  > 12

  x Type
   ,-[$DIR/tests/pass/types/generic/call-chain-1.ts:7:1]
 7 | export let t1: 12 | undefined = a?.m?.({ x: 12 });
 8 | t1 = a!.m!({ x: 12 });
   : ^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > 12
