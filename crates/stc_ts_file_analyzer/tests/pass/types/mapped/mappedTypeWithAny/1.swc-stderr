
  x Type
   ,-[$DIR/tests/pass/types/mapped/mappedTypeWithAny/1.ts:4:1]
 4 | export let abc: any[] = stringifyArray(void 0 as any);
   :                         ^^^^^^^^^^^^^^
   `----

Error: 
  > <T extends readonly any[]>(arr: T) => {
  |     -readonly [K in keyof T]: string;
  | }

  x Type
   ,-[$DIR/tests/pass/types/mapped/mappedTypeWithAny/1.ts:4:1]
 4 | export let abc: any[] = stringifyArray(void 0 as any);
   :                                        ^^^^^^
   `----

Error: 
  > undefined

  x Type
   ,-[$DIR/tests/pass/types/mapped/mappedTypeWithAny/1.ts:4:1]
 4 | export let abc: any[] = stringifyArray(void 0 as any);
   :                                        ^^^^^^^^^^^^^
   `----

Error: 
  > any

  x Type
   ,-[$DIR/tests/pass/types/mapped/mappedTypeWithAny/1.ts:4:1]
 4 | export let abc: any[] = stringifyArray(void 0 as any);
   :                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > {
  |     -readonly [K in keyof T]: string;
  | }
