
  x Type
   ,-[$DIR/tests/pass/types/mapped/nonPrimitiveAndTypeVariables/1.ts:4:1]
 4 | 
 5 | type A<T, V> = { [P in keyof T]: T[P] extends V ? 1 : 0; };
   :      ^
 6 | type B<T, V> = { [P in keyof T]: T[P] extends V | object ? 1 : 0; };
   `----

Error: 
  > {
  |     [P in keyof T]: T[P] extends V ? 1 : 0;
  | }

  x Type
   ,-[$DIR/tests/pass/types/mapped/nonPrimitiveAndTypeVariables/1.ts:5:1]
 5 | type A<T, V> = { [P in keyof T]: T[P] extends V ? 1 : 0; };
 6 | type B<T, V> = { [P in keyof T]: T[P] extends V | object ? 1 : 0; };
   :      ^
   `----

Error: 
  > {
  |     [P in keyof T]: T[P] extends (V | object) ? 1 : 0;
  | }

  x Type
   ,-[$DIR/tests/pass/types/mapped/nonPrimitiveAndTypeVariables/1.ts:7:1]
 7 | 
 8 | export let a: A<{ a: 0 | 1 }, 0> = { a: 0 };
   :                                    ^^^^^^^^
   `----

Error: 
  > {
  |     a: 0;
  | }
