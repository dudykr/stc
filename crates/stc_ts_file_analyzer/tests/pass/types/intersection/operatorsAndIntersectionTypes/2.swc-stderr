
  x Type
   ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:5:5]
 5 | return "21EC2020-3AEA-4069-A2DD-08002B30309D" as Guid;
   :        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > Guid

  x Type
   ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:9:5]
 9 | return 12345 as SerialNo;
   :        ^^^^^^^^^^^^^^^^^
   `----

Error: 
  > SerialNo

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:12:1]
 12 | let map1: { [x: string]: number } = {};
    :                                     ^^
    `----

Error: 
  > {
  | }

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:13:1]
 13 | let guid = createGuid();
    :            ^^^^^^^^^^
    `----

Error: 
  > () => Guid

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:13:1]
 13 | let guid = createGuid();
    :            ^^^^^^^^^^^^
    `----

Error: 
  > Guid

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:14:1]
 14 | map1[guid] = 123;  // Can with tagged string
    : ^^^^
    `----

Error: 
  > {
  |     [x: string]: number;
  | }

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:14:1]
 14 | map1[guid] = 123;  // Can with tagged string
    :      ^^^^
    `----

Error: 
  > (string & {
  |     $Guid: any;
  | })

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:14:1]
 14 | map1[guid] = 123;  // Can with tagged string
    : ^^^^^^^^^^
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:14:1]
 14 | map1[guid] = 123;  // Can with tagged string
    : ^^^^^^^^^^^^^^^^
    `----

Error: 
  > 123

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:16:1]
 16 | let map2: { [x: number]: string } = {};
    :                                     ^^
    `----

Error: 
  > {
  | }

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:17:1]
 17 | let serialNo = createSerialNo();
    :                ^^^^^^^^^^^^^^
    `----

Error: 
  > () => SerialNo

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:17:1]
 17 | let serialNo = createSerialNo();
    :                ^^^^^^^^^^^^^^^^
    `----

Error: 
  > SerialNo

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:18:1]
 18 | map2[serialNo] = "hello";  // Can index with tagged number
    : ^^^^
    `----

Error: 
  > {
  |     [x: number]: string;
  | }

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:18:1]
 18 | map2[serialNo] = "hello";  // Can index with tagged number
    :      ^^^^^^^^
    `----

Error: 
  > (number & {
  |     $SerialNo: any;
  | })

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:18:1]
 18 | map2[serialNo] = "hello";  // Can index with tagged number
    : ^^^^^^^^^^^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:18:1]
 18 | map2[serialNo] = "hello";  // Can index with tagged number
    : ^^^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > "hello"

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:20:1]
 20 | export const s4 = guid + serialNo;
    :                   ^^^^
    `----

Error: 
  > (string & {
  |     $Guid: any;
  | })

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:20:1]
 20 | export const s4 = guid + serialNo;
    :                          ^^^^^^^^
    `----

Error: 
  > (number & {
  |     $SerialNo: any;
  | })

  x Type
    ,-[$DIR/tests/pass/types/intersection/operatorsAndIntersectionTypes/2.ts:20:1]
 20 | export const s4 = guid + serialNo;
    :                   ^^^^^^^^^^^^^^^
    `----

Error: 
  > string
