
  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:8:1]
  8 | 
  9 |     type IAxis = ILinearAxis | ICategoricalAxis;
    :          ^^^^^
 10 |     type IAxisType = "linear" | "categorical";
    `----

Error: 
  > (ILinearAxis | ICategoricalAxis)

  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:9:1]
  9 |     type IAxis = ILinearAxis | ICategoricalAxis;
 10 |     type IAxisType = "linear" | "categorical";
    :          ^^^^^^^^^
    `----

Error: 
  > ("linear" | "categorical")

  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:12:1]
 12 |     function getAxisType(): IAxisType {
 13 |         if (1 == 1) {
    :             ^^^^^^
 14 |             return "categorical";
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:19:1]
 19 | 
 20 |     const bad: IAxis = { type: getAxisType() };
    :                                ^^^^^^^^^^^
 21 |     const good: IAxis = { type: undefined };
    `----

Error: 
  > () => IAxisType

  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:19:1]
 19 | 
 20 |     const bad: IAxis = { type: getAxisType() };
    :                                ^^^^^^^^^^^^^
 21 |     const good: IAxis = { type: undefined };
    `----

Error: 
  > IAxisType

  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:19:1]
 19 | 
 20 |     const bad: IAxis = { type: getAxisType() };
    :                        ^^^^^^^^^^^^^^^^^^^^^^^
 21 |     const good: IAxis = { type: undefined };
    `----

Error: 
  > {
  |     type: IAxisType;
  | }

  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:20:1]
 20 |     const bad: IAxis = { type: getAxisType() };
 21 |     const good: IAxis = { type: undefined };
    :                                 ^^^^^^^^^
 22 |     good.type = getAxisType();
    `----

Error: 
  > undefined

  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:20:1]
 20 |     const bad: IAxis = { type: getAxisType() };
 21 |     const good: IAxis = { type: undefined };
    :                         ^^^^^^^^^^^^^^^^^^^
 22 |     good.type = getAxisType();
    `----

Error: 
  > {
  |     type: undefined;
  | }

  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:21:1]
 21 |     const good: IAxis = { type: undefined };
 22 |     good.type = getAxisType();
    :     ^^^^
 23 | }
    `----

Error: 
  > (ILinearAxis | ICategoricalAxis)

  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:21:1]
 21 |     const good: IAxis = { type: undefined };
 22 |     good.type = getAxisType();
    :     ^^^^^^^^^
 23 | }
    `----

Error: 
  > ("linear" | "categorical")

  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:21:1]
 21 |     const good: IAxis = { type: undefined };
 22 |     good.type = getAxisType();
    :                 ^^^^^^^^^^^
 23 | }
    `----

Error: 
  > () => IAxisType

  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:21:1]
 21 |     const good: IAxis = { type: undefined };
 22 |     good.type = getAxisType();
    :                 ^^^^^^^^^^^^^
 23 | }
    `----

Error: 
  > IAxisType

  x Type
    ,-[$DIR/tests/pass/types/union/assignmentCompatWithDiscriminatedUnion/5.ts:21:1]
 21 |     const good: IAxis = { type: undefined };
 22 |     good.type = getAxisType();
    :     ^^^^^^^^^^^^^^^^^^^^^^^^^
 23 | }
    `----

Error: 
  > IAxisType
