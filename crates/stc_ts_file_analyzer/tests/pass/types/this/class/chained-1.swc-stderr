
  x Type
   ,-[$DIR/tests/pass/types/this/class/chained-1.ts:2:1]
 2 |     foo() {
 3 |         return this;
   :                ^^^^
 4 |     }
   `----

Error: 
  > this

  x Type
   ,-[$DIR/tests/pass/types/this/class/chained-1.ts:5:1]
 5 | }
 6 | class B extends A {
   :                 ^
 7 |     bar() {
   `----

Error: 
  > typeof A

  x Type
   ,-[$DIR/tests/pass/types/this/class/chained-1.ts:7:1]
 7 |     bar() {
 8 |         return this;
   :                ^^^^
 9 |     }
   `----

Error: 
  > this

  x Type
    ,-[$DIR/tests/pass/types/this/class/chained-1.ts:10:1]
 10 | }
 11 | class C extends B {
    :                 ^
 12 |     baz() {
    `----

Error: 
  > typeof B

  x Type
    ,-[$DIR/tests/pass/types/this/class/chained-1.ts:12:1]
 12 |     baz() {
 13 |         return this;
    :                ^^^^
 14 |     }
    `----

Error: 
  > this

  x Type
    ,-[$DIR/tests/pass/types/this/class/chained-1.ts:16:1]
 16 | var c: C;
 17 | export var z = c.foo().bar().baz();  // Fluent pattern
    :                ^
    `----

Error: 
  > C

  x Type
    ,-[$DIR/tests/pass/types/this/class/chained-1.ts:16:1]
 16 | var c: C;
 17 | export var z = c.foo().bar().baz();  // Fluent pattern
    :                ^^^^^^^
    `----

Error: 
  > C

  x Type
    ,-[$DIR/tests/pass/types/this/class/chained-1.ts:16:1]
 16 | var c: C;
 17 | export var z = c.foo().bar().baz();  // Fluent pattern
    :                ^^^^^^^^^^^^^
    `----

Error: 
  > C

  x Type
    ,-[$DIR/tests/pass/types/this/class/chained-1.ts:16:1]
 16 | var c: C;
 17 | export var z = c.foo().bar().baz();  // Fluent pattern
    :                ^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > C
