
  x Type
   ,-[$DIR/tests/pass/fn/generator/infer/1.ts:4:1]
 4 |     yield* {
 5 |         *[Symbol.iterator]() {
   :           ^^^^^^
 6 |             yield (x: string) => x.length
   `----

Error: 
  > SymbolConstructor

  x Type
   ,-[$DIR/tests/pass/fn/generator/infer/1.ts:4:1]
 4 |     yield* {
 5 |         *[Symbol.iterator]() {
   :           ^^^^^^^^^^^^^^^
 6 |             yield (x: string) => x.length
   `----

Error: 
  > symbol

  x Type
   ,-[$DIR/tests/pass/fn/generator/infer/1.ts:5:1]
 5 |         *[Symbol.iterator]() {
 6 |             yield (x: string) => x.length
   :                                  ^
 7 |         }
   `----

Error: 
  > string

  x Type
   ,-[$DIR/tests/pass/fn/generator/infer/1.ts:5:1]
 5 |         *[Symbol.iterator]() {
 6 |             yield (x: string) => x.length
   :                                  ^^^^^^^^
 7 |         }
   `----

Error: 
  > number

  x Type
   ,-[$DIR/tests/pass/fn/generator/infer/1.ts:5:1]
 5 |         *[Symbol.iterator]() {
 6 |             yield (x: string) => x.length
   :                   ^^^^^^^^^^^^^^^^^^^^^^^
 7 |         }
   `----

Error: 
  > (x: string) => number

  x Type
   ,-[$DIR/tests/pass/fn/generator/infer/1.ts:5:1]
 5 |         *[Symbol.iterator]() {
 6 |             yield (x: string) => x.length
   :             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 7 |         }
   `----

Error: 
  > any

  x Type
   ,-[$DIR/tests/pass/fn/generator/infer/1.ts:3:1]
 3 |     export const gen = function* () {
 4 | ,->     yield* {
 5 | |           *[Symbol.iterator]() {
 6 | |               yield (x: string) => x.length
 7 | |           }
 8 | `->     }
 9 |     };
   `----

Error: 
  > {
  |     [Symbol.iterator](): Generator<(x: string) => number, void, unknown>;
  | }

  x Type
   ,-[$DIR/tests/pass/fn/generator/infer/1.ts:3:1]
 3 |     export const gen = function* () {
 4 | ,->     yield* {
 5 | |           *[Symbol.iterator]() {
 6 | |               yield (x: string) => x.length
 7 | |           }
 8 | `->     }
 9 |     };
   `----

Error: 
  > any

  x Type
   ,-[$DIR/tests/pass/fn/generator/infer/1.ts:2:1]
 2 |     
 3 | ,-> export const gen = function* () {
 4 | |       yield* {
 5 | |           *[Symbol.iterator]() {
 6 | |               yield (x: string) => x.length
 7 | |           }
 8 | |       }
 9 | `-> };
   `----

Error: 
  > () => Generator<((x: string) => number | void), void, unknown>
