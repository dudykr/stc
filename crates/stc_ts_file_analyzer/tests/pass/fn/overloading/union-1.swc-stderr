
  x Type
   ,-[$DIR/tests/pass/fn/overloading/union-1.ts:1:1]
 1 | type Kind = "A" | "B"
   :      ^^^^
   `----

Error: 
  > ("A" | "B")

  x Type
    ,-[$DIR/tests/pass/fn/overloading/union-1.ts:20:1]
 20 | function hasKind(entity: Entity, kind: Kind): boolean {
 21 |     return entity.kind === kind;
    :            ^^^^^^
 22 | }
    `----

Error: 
  > Entity

  x Type
    ,-[$DIR/tests/pass/fn/overloading/union-1.ts:20:1]
 20 | function hasKind(entity: Entity, kind: Kind): boolean {
 21 |     return entity.kind === kind;
    :            ^^^^^^^^^^^
 22 | }
    `----

Error: 
  > ("A" | "B")

  x Type
    ,-[$DIR/tests/pass/fn/overloading/union-1.ts:20:1]
 20 | function hasKind(entity: Entity, kind: Kind): boolean {
 21 |     return entity.kind === kind;
    :                            ^^^^
 22 | }
    `----

Error: 
  > ("A" | "B")

  x Type
    ,-[$DIR/tests/pass/fn/overloading/union-1.ts:20:1]
 20 | function hasKind(entity: Entity, kind: Kind): boolean {
 21 |     return entity.kind === kind;
    :            ^^^^^^^^^^^^^^^^^^^^
 22 | }
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/fn/overloading/union-1.ts:24:1]
 24 | 
 25 | hasKind
    : ^^^^^^^
    `----

Error: 
  > typeof hasKind
