
  x Type
    ,-[$DIR/tests/pass/facts/deep/equality/1.ts:17:1]
 17 | if (foo.obj.obj2.type === 'a') {
    :     ^^^
    `----

Error: 
  > {
  |     obj: {
  |         obj2: (A | B);
  |     };
  | }

  x Type
    ,-[$DIR/tests/pass/facts/deep/equality/1.ts:17:1]
 17 | if (foo.obj.obj2.type === 'a') {
    :     ^^^^^^^
    `----

Error: 
  > {
  |     obj2: (A | B);
  | }

  x Type
    ,-[$DIR/tests/pass/facts/deep/equality/1.ts:17:1]
 17 | if (foo.obj.obj2.type === 'a') {
    :     ^^^^^^^^^^^^
    `----

Error: 
  > (A | B)

  x Type
    ,-[$DIR/tests/pass/facts/deep/equality/1.ts:17:1]
 17 | if (foo.obj.obj2.type === 'a') {
    :     ^^^^^^^^^^^^^^^^^
    `----

Error: 
  > ('a' | 'b')

  x Type
    ,-[$DIR/tests/pass/facts/deep/equality/1.ts:17:1]
 17 | if (foo.obj.obj2.type === 'a') {
    :     ^^^^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/facts/deep/equality/1.ts:18:5]
 18 | useA(foo.obj.obj2)
    :      ^^^^^^^^^^^^
    `----

Error: 
  > A

  x Type
    ,-[$DIR/tests/pass/facts/deep/equality/1.ts:18:5]
 18 | useA(foo.obj.obj2)
    : ^^^^
    `----

Error: 
  > (a: A) => void

  x Type
    ,-[$DIR/tests/pass/facts/deep/equality/1.ts:18:5]
 18 | useA(foo.obj.obj2)
    : ^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > void
