
  x Type
   ,-[$DIR/tests/pass/controlFlow/controlFlowOptionalChain/2.ts:3:1]
 3 | 
 4 | type Thing = { foo: string | number, bar(): number, baz: object };
   :      ^^^^^
   `----

Error: 
  > {
  |     foo: (string | number);
  |     bar(): number;
  |     baz: object;
  | }

  x Type
   ,-[$DIR/tests/pass/controlFlow/controlFlowOptionalChain/2.ts:6:1]
 6 | function f41(o: Thing | undefined) {
 7 |     switch (typeof o?.foo) {
   :                    ^
 8 |         case "string":
   `----

Error: 
  > ({
  |     foo: (string | number);
  |     bar(): number;
  |     baz: object;
  | } | undefined)

  x Type
   ,-[$DIR/tests/pass/controlFlow/controlFlowOptionalChain/2.ts:6:1]
 6 | function f41(o: Thing | undefined) {
 7 |     switch (typeof o?.foo) {
   :                    ^^^^^^
 8 |         case "string":
   `----

Error: 
  > (string | number | undefined)

  x Type
   ,-[$DIR/tests/pass/controlFlow/controlFlowOptionalChain/2.ts:6:1]
 6 | function f41(o: Thing | undefined) {
 7 |     switch (typeof o?.foo) {
   :             ^^^^^^^^^^^^^
 8 |         case "string":
   `----

Error: 
  > string

  x Type
   ,-[$DIR/tests/pass/controlFlow/controlFlowOptionalChain/2.ts:7:1]
 7 |     switch (typeof o?.foo) {
 8 |         case "string":
   :              ^^^^^^^^
 9 |             o.foo;
   `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/controlFlowOptionalChain/2.ts:8:1]
  8 |         case "string":
  9 |             o.foo;
    :             ^
 10 |             break;
    `----

Error: 
  > {
  |     foo: (string | number);
  |     bar(): number;
  |     baz: object;
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/controlFlowOptionalChain/2.ts:8:1]
  8 |         case "string":
  9 |             o.foo;
    :             ^^^^^
 10 |             break;
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/controlFlowOptionalChain/2.ts:10:1]
 10 |             break;
 11 |         case "number":
    :              ^^^^^^^^
 12 |             o.foo;
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/controlFlowOptionalChain/2.ts:11:1]
 11 |         case "number":
 12 |             o.foo;
    :             ^
 13 |             break;
    `----

Error: 
  > {
  |     foo: (string | number);
  |     bar(): number;
  |     baz: object;
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/controlFlowOptionalChain/2.ts:11:1]
 11 |         case "number":
 12 |             o.foo;
    :             ^^^^^
 13 |             break;
    `----

Error: 
  > number
