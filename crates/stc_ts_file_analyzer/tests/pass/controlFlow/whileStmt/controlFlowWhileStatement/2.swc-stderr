
  x Type
   ,-[$DIR/tests/pass/controlFlow/whileStmt/controlFlowWhileStatement/2.ts:1:1]
 1 | export declare let x: string | number;
 2 | x = "";
   : ^^^^^^
 3 | while (x = x.length) {
   `----

Error: 
  > ""

  x Type
   ,-[$DIR/tests/pass/controlFlow/whileStmt/controlFlowWhileStatement/2.ts:2:1]
 2 | x = "";
 3 | while (x = x.length) {
   :            ^
 4 |     x; // number
   `----

Error: 
  > string

  x Type
   ,-[$DIR/tests/pass/controlFlow/whileStmt/controlFlowWhileStatement/2.ts:2:1]
 2 | x = "";
 3 | while (x = x.length) {
   :            ^^^^^^^^
 4 |     x; // number
   `----

Error: 
  > number

  x Type
   ,-[$DIR/tests/pass/controlFlow/whileStmt/controlFlowWhileStatement/2.ts:2:1]
 2 | x = "";
 3 | while (x = x.length) {
   :        ^^^^^^^^^^^^
 4 |     x; // number
   `----

Error: 
  > number

  x Type
   ,-[$DIR/tests/pass/controlFlow/whileStmt/controlFlowWhileStatement/2.ts:3:1]
 3 | while (x = x.length) {
 4 |     x; // number
   :     ^
 5 |     x = "";
   `----

Error: 
  > number

  x Type
   ,-[$DIR/tests/pass/controlFlow/whileStmt/controlFlowWhileStatement/2.ts:4:1]
 4 |     x; // number
 5 |     x = "";
   :     ^^^^^^
 6 | }
   `----

Error: 
  > ""
