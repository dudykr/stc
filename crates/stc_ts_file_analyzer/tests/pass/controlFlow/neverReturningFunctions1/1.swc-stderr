
  x Type
   ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/1.ts:5:5]
 5 | throw new Error(message);
   :           ^^^^^
   `----

Error: 
  > ErrorConstructor

  x Type
   ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/1.ts:5:5]
 5 | throw new Error(message);
   :                 ^^^^^^^
   `----

Error: 
  > string

  x Type
   ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/1.ts:5:5]
 5 | throw new Error(message);
   :       ^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > Error

  x Type
   ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/1.ts:9:5]
 9 | if (x === undefined) fail("undefined argument");
   :     ^
   `----

Error: 
  > (string | undefined)

  x Type
   ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/1.ts:9:5]
 9 | if (x === undefined) fail("undefined argument");
   :           ^^^^^^^^^
   `----

Error: 
  > undefined

  x Type
   ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/1.ts:9:5]
 9 | if (x === undefined) fail("undefined argument");
   :     ^^^^^^^^^^^^^^^
   `----

Error: 
  > boolean

  x Type
   ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/1.ts:9:5]
 9 | if (x === undefined) fail("undefined argument");
   :                      ^^^^
   `----

Error: 
  > (message?: string) => never

  x Type
   ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/1.ts:9:5]
 9 | if (x === undefined) fail("undefined argument");
   :                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > never

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/1.ts:10:5]
 10 | x.length;  // string
    : ^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/1.ts:10:5]
 10 | x.length;  // string
    : ^^^^^^^^
    `----

Error: 
  > number
