
  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:41:1]
 41 | 
 42 | export type ComponentDefinition<T extends object = object> = T &
    :             ^^^^^^^^^^^^^^^^^^^
 43 |   Partial<Component> &
    `----

Error: 
  > (T & Partial<Component> & ThisType<(T & Component)>)

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:44:1]
 44 |   ThisType<T & Component>;
 45 | export type Some = ComponentDefinition<object>;
    :             ^^^^
 46 | const Component = registerComponent("test-component", {
    `----

Error: 
  > ComponentDefinition<object>

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:45:1]
 45 | export type Some = ComponentDefinition<object>;
 46 | const Component = registerComponent("test-component", {
    :                   ^^^^^^^^^^^^^^^^^
 47 |   schema: {
    `----

Error: 
  > <T extends object>(name: string, component: ComponentDefinition<T>) => ComponentConstructor<T>

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:48:1]
 48 |     myProperty: {
 49 |       default: [],
    :                ^^
 50 |       parse() {
    `----

Error: 
  > any[]

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:50:1]
 50 |       parse() {
 51 |         return [true];
    :                ^^^^^^
 52 |       },
    `----

Error: 
  > [true]

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:47:1]
 47 |       schema: {
 48 | ,->     myProperty: {
 49 | |         default: [],
 50 | |         parse() {
 51 | |           return [true];
 52 | |         },
 53 | `->     },
 54 |         string: { type: "string" },
    `----

Error: 
  > {
  |     default: any[];
  |     parse(): [true];
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:53:1]
 53 |     },
 54 |     string: { type: "string" },
    :             ^^^^^^^^^^^^^^^^^^
 55 |     num: 0,
    `----

Error: 
  > {
  |     type: "string";
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:46:1]
 46 |     const Component = registerComponent("test-component", {
 47 | ,->   schema: {
 48 | |       myProperty: {
 49 | |         default: [],
 50 | |         parse() {
 51 | |           return [true];
 52 | |         },
 53 | |       },
 54 | |       string: { type: "string" },
 55 | |       num: 0,
 56 | `->   },
 57 |       init() {
    `----

Error: 
  > {
  |     myProperty: {
  |         default: any[];
  |         parse(): [true];
  |     };
  |     string: {
  |         type: "string";
  |     };
  |     num: 0;
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:57:1]
 57 |   init() {
 58 |     this.data.num = 0;
    :     ^^^^
 59 |     this.el.setAttribute("custom-attribute", "custom-value");
    `----

Error: 
  > this

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:57:1]
 57 |   init() {
 58 |     this.data.num = 0;
    :     ^^^^^^^^^
 59 |     this.el.setAttribute("custom-attribute", "custom-value");
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:57:1]
 57 |   init() {
 58 |     this.data.num = 0;
    :     ^^^^^^^^^^^^^
 59 |     this.el.setAttribute("custom-attribute", "custom-value");
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:57:1]
 57 |   init() {
 58 |     this.data.num = 0;
    :     ^^^^^^^^^^^^^^^^^
 59 |     this.el.setAttribute("custom-attribute", "custom-value");
    `----

Error: 
  > 0

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:58:1]
 58 |     this.data.num = 0;
 59 |     this.el.setAttribute("custom-attribute", "custom-value");
    :     ^^^^
 60 |   },
    `----

Error: 
  > this

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:58:1]
 58 |     this.data.num = 0;
 59 |     this.el.setAttribute("custom-attribute", "custom-value");
    :     ^^^^^^^
 60 |   },
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:58:1]
 58 |     this.data.num = 0;
 59 |     this.el.setAttribute("custom-attribute", "custom-value");
    :     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 60 |   },
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:68:1]
 68 |     // Reference to system because both were registered with the same name.
 69 |     return f * this.data.num * this.system!.data.counter;
    :            ^
 70 |   },
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:68:1]
 68 |     // Reference to system because both were registered with the same name.
 69 |     return f * this.data.num * this.system!.data.counter;
    :                ^^^^
 70 |   },
    `----

Error: 
  > this

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:68:1]
 68 |     // Reference to system because both were registered with the same name.
 69 |     return f * this.data.num * this.system!.data.counter;
    :                ^^^^^^^^^
 70 |   },
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:68:1]
 68 |     // Reference to system because both were registered with the same name.
 69 |     return f * this.data.num * this.system!.data.counter;
    :                ^^^^^^^^^^^^^
 70 |   },
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:68:1]
 68 |     // Reference to system because both were registered with the same name.
 69 |     return f * this.data.num * this.system!.data.counter;
    :            ^^^^^^^^^^^^^^^^^
 70 |   },
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:68:1]
 68 |     // Reference to system because both were registered with the same name.
 69 |     return f * this.data.num * this.system!.data.counter;
    :                                ^^^^
 70 |   },
    `----

Error: 
  > this

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:68:1]
 68 |     // Reference to system because both were registered with the same name.
 69 |     return f * this.data.num * this.system!.data.counter;
    :                                ^^^^^^^^^^^
 70 |   },
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:68:1]
 68 |     // Reference to system because both were registered with the same name.
 69 |     return f * this.data.num * this.system!.data.counter;
    :                                ^^^^^^^^^^^^
 70 |   },
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:68:1]
 68 |     // Reference to system because both were registered with the same name.
 69 |     return f * this.data.num * this.system!.data.counter;
    :                                ^^^^^^^^^^^^^^^^^
 70 |   },
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:68:1]
 68 |     // Reference to system because both were registered with the same name.
 69 |     return f * this.data.num * this.system!.data.counter;
    :                                ^^^^^^^^^^^^^^^^^^^^^^^^^
 70 |   },
    `----

Error: 
  > any

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:68:1]
 68 |     // Reference to system because both were registered with the same name.
 69 |     return f * this.data.num * this.system!.data.counter;
    :            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 70 |   },
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:45:1]
 45 |     export type Some = ComponentDefinition<object>;
 46 | ,-> const Component = registerComponent("test-component", {
 47 | |     schema: {
 48 | |       myProperty: {
 49 | |         default: [],
 50 | |         parse() {
 51 | |           return [true];
 52 | |         },
 53 | |       },
 54 | |       string: { type: "string" },
 55 | |       num: 0,
 56 | |     },
 57 | |     init() {
 58 | |       this.data.num = 0;
 59 | |       this.el.setAttribute("custom-attribute", "custom-value");
 60 | |     },
 61 | |     update() {},
 62 | |     tick() {},
 63 | |     remove() {},
 64 | |     pause() {},
 65 | |     play() {},
 66 | |   
 67 | |     multiply(f: number) {
 68 | |       // Reference to system because both were registered with the same name.
 69 | |       return f * this.data.num * this.system!.data.counter;
 70 | |     },
 71 | `-> });
    `----

Error: 
  > {
  |     schema: {
  |         myProperty: {
  |             default: any[];
  |             parse(): [true];
  |         };
  |         string: {
  |             type: "string";
  |         };
  |         num: 0;
  |     };
  |     init(): void;
  |     update(): void;
  |     tick(): void;
  |     remove(): void;
  |     pause(): void;
  |     play(): void;
  |     multiply(f: number): number;
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/neverReturningFunctions1/6.ts:45:1]
 45 |     export type Some = ComponentDefinition<object>;
 46 | ,-> const Component = registerComponent("test-component", {
 47 | |     schema: {
 48 | |       myProperty: {
 49 | |         default: [],
 50 | |         parse() {
 51 | |           return [true];
 52 | |         },
 53 | |       },
 54 | |       string: { type: "string" },
 55 | |       num: 0,
 56 | |     },
 57 | |     init() {
 58 | |       this.data.num = 0;
 59 | |       this.el.setAttribute("custom-attribute", "custom-value");
 60 | |     },
 61 | |     update() {},
 62 | |     tick() {},
 63 | |     remove() {},
 64 | |     pause() {},
 65 | |     play() {},
 66 | |   
 67 | |     multiply(f: number) {
 68 | |       // Reference to system because both were registered with the same name.
 69 | |       return f * this.data.num * this.system!.data.counter;
 70 | |     },
 71 | `-> });
    `----

Error: 
  > ComponentConstructor<object>
