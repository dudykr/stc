
  x Type
   ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:7:1]
 7 | Function.prototype.now = function () {
   : ^^^^^^^^
   `----

Error: 
  > FunctionConstructor

  x Type
   ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:7:1]
 7 | Function.prototype.now = function () {
   : ^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > (Function & Function)

  x Type
   ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:7:1]
 7 | Function.prototype.now = function () {
   : ^^^^^^^^^^^^^^^^^^^^^^
   `----

Error: 
  > () => string

  x Type
   ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:7:1]
 7 | ,-> Function.prototype.now = function () {
 8 | |       return "now"
 9 | `-> }
   `----

Error: 
  > () => string

  x Type
   ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:7:1]
 7 | ,-> Function.prototype.now = function () {
 8 | |       return "now"
 9 | `-> }
   `----

Error: 
  > () => string

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:13:9]
 13 | return {}
    :        ^^
    `----

Error: 
  > {
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:25:1]
 25 | console.log(X.now()) // works as expected
    : ^^^^^^^
    `----

Error: 
  > Console

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:25:1]
 25 | console.log(X.now()) // works as expected
    :             ^
    `----

Error: 
  > typeof X

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:25:1]
 25 | console.log(X.now()) // works as expected
    :             ^^^^^^^
    `----

Error: 
  > {
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:25:1]
 25 | console.log(X.now()) // works as expected
    : ^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > void

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:26:1]
 26 | console.log(Y.now()) // works as expected
    : ^^^^^^^
    `----

Error: 
  > Console

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:26:1]
 26 | console.log(Y.now()) // works as expected
    :             ^
    `----

Error: 
  > typeof Y

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:26:1]
 26 | console.log(Y.now()) // works as expected
    :             ^^^^^^^
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:26:1]
 26 | console.log(Y.now()) // works as expected
    : ^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > void

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:28:1]
 28 | export const x: X | number = Math.random() > 0.5 ? new X() : 1
    :                              ^^^^
    `----

Error: 
  > Math

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:28:1]
 28 | export const x: X | number = Math.random() > 0.5 ? new X() : 1
    :                              ^^^^^^^^^^^^^
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:28:1]
 28 | export const x: X | number = Math.random() > 0.5 ? new X() : 1
    :                              ^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:28:1]
 28 | export const x: X | number = Math.random() > 0.5 ? new X() : 1
    :                                                        ^
    `----

Error: 
  > typeof X

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:28:1]
 28 | export const x: X | number = Math.random() > 0.5 ? new X() : 1
    :                                                    ^^^^^^^
    `----

Error: 
  > X

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:28:1]
 28 | export const x: X | number = Math.random() > 0.5 ? new X() : 1
    :                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > (X | 1)

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:30:1]
 30 | if (x instanceof X) {
    :     ^
    `----

Error: 
  > (X | number)

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:30:1]
 30 | if (x instanceof X) {
    :                  ^
    `----

Error: 
  > typeof X

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:30:1]
 30 | if (x instanceof X) {
    :     ^^^^^^^^^^^^^^
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:31:5]
 31 | x.why() // should compile
    : ^
    `----

Error: 
  > X

  x Type
    ,-[$DIR/tests/pass/controlFlow/ifStmt/instanceof/extends-fn-1.ts:31:5]
 31 | x.why() // should compile
    : ^^^^^^^
    `----

Error: 
  > void
