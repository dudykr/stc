
  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:11:1]
 11 | 
 12 | export const none: None = { none: '' };
    :                           ^^^^^^^^^^^^
    `----

Error: 
  > {
  |     none: '';
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:14:1]
 14 | export function isSome<a>(value: Optional<a>): value is Some<a> {
 15 |     return 'some' in value;
    :                      ^^^^^
 16 | }
    `----

Error: 
  > (Some | None)

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:14:1]
 14 | export function isSome<a>(value: Optional<a>): value is Some<a> {
 15 |     return 'some' in value;
    :            ^^^^^^^^^^^^^^^
 16 | }
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:18:1]
 18 | function someFrom<a>(some: a) {
 19 |     return { some };
    :            ^^^^^^^^
 20 | }
    `----

Error: 
  > {
  |     some: a;
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:22:1]
 22 | function f5(x: string | number) {
 23 |     if (typeof x === "string" && typeof x === "number") {
    :                ^
 24 |         x;  // number (guard as assertion)
    `----

Error: 
  > (string | number)

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:22:1]
 22 | function f5(x: string | number) {
 23 |     if (typeof x === "string" && typeof x === "number") {
    :         ^^^^^^^^
 24 |         x;  // number (guard as assertion)
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:22:1]
 22 | function f5(x: string | number) {
 23 |     if (typeof x === "string" && typeof x === "number") {
    :         ^^^^^^^^^^^^^^^^^^^^^
 24 |         x;  // number (guard as assertion)
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:22:1]
 22 | function f5(x: string | number) {
 23 |     if (typeof x === "string" && typeof x === "number") {
    :                                         ^
 24 |         x;  // number (guard as assertion)
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:22:1]
 22 | function f5(x: string | number) {
 23 |     if (typeof x === "string" && typeof x === "number") {
    :                                  ^^^^^^^^
 24 |         x;  // number (guard as assertion)
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:22:1]
 22 | function f5(x: string | number) {
 23 |     if (typeof x === "string" && typeof x === "number") {
    :                                  ^^^^^^^^^^^^^^^^^^^^^
 24 |         x;  // number (guard as assertion)
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:22:1]
 22 | function f5(x: string | number) {
 23 |     if (typeof x === "string" && typeof x === "number") {
    :         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 24 |         x;  // number (guard as assertion)
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:23:1]
 23 |     if (typeof x === "string" && typeof x === "number") {
 24 |         x;  // number (guard as assertion)
    :         ^
 25 |     }
    `----

Error: 
  > never

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:26:1]
 26 |     else {
 27 |         x;  // string | number
    :         ^
 28 |     }
    `----

Error: 
  > (string | number)

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/8.ts:28:1]
 28 |     }
 29 |     x;  // string | number
    :     ^
 30 | }
    `----

Error: 
  > (string | number)
