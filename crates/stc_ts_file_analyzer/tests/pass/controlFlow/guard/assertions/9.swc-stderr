
  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:11:1]
 11 | 
 12 | export const none: None = { none: '' };
    :                           ^^^^^^^^^^^^
    `----

Error: 
  > {
  |     none: '';
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:14:1]
 14 | export function isSome<a>(value: Optional<a>): value is Some<a> {
 15 |     return 'some' in value;
    :                      ^^^^^
 16 | }
    `----

Error: 
  > (Some | None)

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:14:1]
 14 | export function isSome<a>(value: Optional<a>): value is Some<a> {
 15 |     return 'some' in value;
    :            ^^^^^^^^^^^^^^^
 16 | }
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:18:1]
 18 | function someFrom<a>(some: a) {
 19 |     return { some };
    :            ^^^^^^^^
 20 | }
    `----

Error: 
  > {
  |     some: a;
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:24:1]
 24 |     let x: string | undefined | null;
 25 |     x!.slice();
    :     ^
 26 |     x = "";
    `----

Error: 
  > (string | undefined | null)

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:24:1]
 24 |     let x: string | undefined | null;
 25 |     x!.slice();
    :     ^^
 26 |     x = "";
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:24:1]
 24 |     let x: string | undefined | null;
 25 |     x!.slice();
    :     ^^^^^^^^^^
 26 |     x = "";
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:25:1]
 25 |     x!.slice();
 26 |     x = "";
    :     ^^^^^^
 27 |     x!.slice();
    `----

Error: 
  > ""

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:26:1]
 26 |     x = "";
 27 |     x!.slice();
    :     ^
 28 |     x = undefined;
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:26:1]
 26 |     x = "";
 27 |     x!.slice();
    :     ^^
 28 |     x = undefined;
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:26:1]
 26 |     x = "";
 27 |     x!.slice();
    :     ^^^^^^^^^^
 28 |     x = undefined;
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:27:1]
 27 |     x!.slice();
 28 |     x = undefined;
    :         ^^^^^^^^^
 29 |     x!.slice();
    `----

Error: 
  > undefined

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:27:1]
 27 |     x!.slice();
 28 |     x = undefined;
    :     ^^^^^^^^^^^^^
 29 |     x!.slice();
    `----

Error: 
  > undefined

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:28:1]
 28 |     x = undefined;
 29 |     x!.slice();
    :     ^
 30 |     x = null;
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:28:1]
 28 |     x = undefined;
 29 |     x!.slice();
    :     ^^
 30 |     x = null;
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:28:1]
 28 |     x = undefined;
 29 |     x!.slice();
    :     ^^^^^^^^^^
 30 |     x = null;
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:29:1]
 29 |     x!.slice();
 30 |     x = null;
    :     ^^^^^^^^
 31 |     x!.slice();
    `----

Error: 
  > null

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:30:1]
 30 |     x = null;
 31 |     x!.slice();
    :     ^
 32 |     x = <undefined | null>undefined;
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:30:1]
 30 |     x = null;
 31 |     x!.slice();
    :     ^^
 32 |     x = <undefined | null>undefined;
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:30:1]
 30 |     x = null;
 31 |     x!.slice();
    :     ^^^^^^^^^^
 32 |     x = <undefined | null>undefined;
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:31:1]
 31 |     x!.slice();
 32 |     x = <undefined | null>undefined;
    :                           ^^^^^^^^^
 33 |     x!.slice();
    `----

Error: 
  > undefined

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:31:1]
 31 |     x!.slice();
 32 |     x = <undefined | null>undefined;
    :         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 33 |     x!.slice();
    `----

Error: 
  > (undefined | null)

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:31:1]
 31 |     x!.slice();
 32 |     x = <undefined | null>undefined;
    :     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 33 |     x!.slice();
    `----

Error: 
  > (undefined | null)

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:32:1]
 32 |     x = <undefined | null>undefined;
 33 |     x!.slice();
    :     ^
 34 |     x = <string | undefined>"";
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:32:1]
 32 |     x = <undefined | null>undefined;
 33 |     x!.slice();
    :     ^^
 34 |     x = <string | undefined>"";
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:32:1]
 32 |     x = <undefined | null>undefined;
 33 |     x!.slice();
    :     ^^^^^^^^^^
 34 |     x = <string | undefined>"";
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:33:1]
 33 |     x!.slice();
 34 |     x = <string | undefined>"";
    :         ^^^^^^^^^^^^^^^^^^^^^^
 35 |     x!.slice();
    `----

Error: 
  > (string | undefined)

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:33:1]
 33 |     x!.slice();
 34 |     x = <string | undefined>"";
    :     ^^^^^^^^^^^^^^^^^^^^^^^^^^
 35 |     x!.slice();
    `----

Error: 
  > (string | undefined)

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:34:1]
 34 |     x = <string | undefined>"";
 35 |     x!.slice();
    :     ^
 36 |     x = <string | null>"";
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:34:1]
 34 |     x = <string | undefined>"";
 35 |     x!.slice();
    :     ^^
 36 |     x = <string | null>"";
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:34:1]
 34 |     x = <string | undefined>"";
 35 |     x!.slice();
    :     ^^^^^^^^^^
 36 |     x = <string | null>"";
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:35:1]
 35 |     x!.slice();
 36 |     x = <string | null>"";
    :         ^^^^^^^^^^^^^^^^^
 37 |     x!.slice();
    `----

Error: 
  > (string | null)

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:35:1]
 35 |     x!.slice();
 36 |     x = <string | null>"";
    :     ^^^^^^^^^^^^^^^^^^^^^
 37 |     x!.slice();
    `----

Error: 
  > (string | null)

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:36:1]
 36 |     x = <string | null>"";
 37 |     x!.slice();
    :     ^
 38 | }
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:36:1]
 36 |     x = <string | null>"";
 37 |     x!.slice();
    :     ^^
 38 | }
    `----

Error: 
  > string

  x Type
    ,-[$DIR/tests/pass/controlFlow/guard/assertions/9.ts:36:1]
 36 |     x = <string | null>"";
 37 |     x!.slice();
    :     ^^^^^^^^^^
 38 | }
    `----

Error: 
  > string
