
  x Type
   ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:8:3]
 8 | switch (op) {
   :         ^^
   `----

Error: 
  > ("add" | "concat")

  x Type
   ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:9:5]
 9 | case "add":
   :      ^^^^^
   `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:10:7]
 10 | console.log(args.a + args.b);
    : ^^^^^^^
    `----

Error: 
  > Console

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:10:7]
 10 | console.log(args.a + args.b);
    :             ^^^^
    `----

Error: 
  > {
  |     a: number;
  |     b: number;
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:10:7]
 10 | console.log(args.a + args.b);
    :             ^^^^^^
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:10:7]
 10 | console.log(args.a + args.b);
    :                      ^^^^
    `----

Error: 
  > {
  |     a: number;
  |     b: number;
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:10:7]
 10 | console.log(args.a + args.b);
    :                      ^^^^^^
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:10:7]
 10 | console.log(args.a + args.b);
    :             ^^^^^^^^^^^^^^^
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:10:7]
 10 | console.log(args.a + args.b);
    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > void

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:12:5]
 12 | case "concat":
    :      ^^^^^^^^
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:13:7]
 13 | console.log(args.firstArr.concat(args.secondArr));
    : ^^^^^^^
    `----

Error: 
  > Console

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:13:7]
 13 | console.log(args.firstArr.concat(args.secondArr));
    :             ^^^^
    `----

Error: 
  > {
  |     firstArr: any[];
  |     secondArr: any[];
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:13:7]
 13 | console.log(args.firstArr.concat(args.secondArr));
    :             ^^^^^^^^^^^^^
    `----

Error: 
  > any[]

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:13:7]
 13 | console.log(args.firstArr.concat(args.secondArr));
    :                                  ^^^^
    `----

Error: 
  > {
  |     firstArr: any[];
  |     secondArr: any[];
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:13:7]
 13 | console.log(args.firstArr.concat(args.secondArr));
    :                                  ^^^^^^^^^^^^^^
    `----

Error: 
  > any[]

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:13:7]
 13 | console.log(args.firstArr.concat(args.secondArr));
    :             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > any[]

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:13:7]
 13 | console.log(args.firstArr.concat(args.secondArr));
    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `----

Error: 
  > void

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:7:1]
  7 | ,-> const reducer: (...args: ReducerArgs) => void = (op, args) => {
  8 | |     switch (op) {
  9 | |       case "add":
 10 | |         console.log(args.a + args.b);
 11 | |         break;
 12 | |       case "concat":
 13 | |         console.log(args.firstArr.concat(args.secondArr));
 14 | |         break;
 15 | |     }
 16 | `-> };
    `----

Error: 
  > (op: ("add" | "concat"), args: ({
  |     a: number;
  |     b: number;
  | } | {
  |     firstArr: any[];
  |     secondArr: any[];
  | })) => void
