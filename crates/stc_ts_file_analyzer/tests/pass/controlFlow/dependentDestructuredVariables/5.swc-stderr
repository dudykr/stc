
  x Type
   ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:7:1]
 7 | const reducer: (...args: ReducerArgs) => void = (op, args) => {
 8 |   switch (op) {
   :           ^^
 9 |     case "add":
   `----

Error: 
  > ("add" | "concat")

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:8:1]
  8 |   switch (op) {
  9 |     case "add":
    :          ^^^^^
 10 |       console.log(args.a + args.b);
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:9:1]
  9 |     case "add":
 10 |       console.log(args.a + args.b);
    :       ^^^^^^^
 11 |       break;
    `----

Error: 
  > Console

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:9:1]
  9 |     case "add":
 10 |       console.log(args.a + args.b);
    :                   ^^^^
 11 |       break;
    `----

Error: 
  > {
  |     a: number;
  |     b: number;
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:9:1]
  9 |     case "add":
 10 |       console.log(args.a + args.b);
    :                   ^^^^^^
 11 |       break;
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:9:1]
  9 |     case "add":
 10 |       console.log(args.a + args.b);
    :                            ^^^^
 11 |       break;
    `----

Error: 
  > {
  |     a: number;
  |     b: number;
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:9:1]
  9 |     case "add":
 10 |       console.log(args.a + args.b);
    :                            ^^^^^^
 11 |       break;
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:9:1]
  9 |     case "add":
 10 |       console.log(args.a + args.b);
    :                   ^^^^^^^^^^^^^^^
 11 |       break;
    `----

Error: 
  > number

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:9:1]
  9 |     case "add":
 10 |       console.log(args.a + args.b);
    :       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 11 |       break;
    `----

Error: 
  > void

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:11:1]
 11 |       break;
 12 |     case "concat":
    :          ^^^^^^^^
 13 |       console.log(args.firstArr.concat(args.secondArr));
    `----

Error: 
  > boolean

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:12:1]
 12 |     case "concat":
 13 |       console.log(args.firstArr.concat(args.secondArr));
    :       ^^^^^^^
 14 |       break;
    `----

Error: 
  > Console

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:12:1]
 12 |     case "concat":
 13 |       console.log(args.firstArr.concat(args.secondArr));
    :                   ^^^^
 14 |       break;
    `----

Error: 
  > {
  |     firstArr: any[];
  |     secondArr: any[];
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:12:1]
 12 |     case "concat":
 13 |       console.log(args.firstArr.concat(args.secondArr));
    :                   ^^^^^^^^^^^^^
 14 |       break;
    `----

Error: 
  > any[]

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:12:1]
 12 |     case "concat":
 13 |       console.log(args.firstArr.concat(args.secondArr));
    :                                        ^^^^
 14 |       break;
    `----

Error: 
  > {
  |     firstArr: any[];
  |     secondArr: any[];
  | }

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:12:1]
 12 |     case "concat":
 13 |       console.log(args.firstArr.concat(args.secondArr));
    :                                        ^^^^^^^^^^^^^^
 14 |       break;
    `----

Error: 
  > any[]

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:12:1]
 12 |     case "concat":
 13 |       console.log(args.firstArr.concat(args.secondArr));
    :                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 14 |       break;
    `----

Error: 
  > any[]

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:12:1]
 12 |     case "concat":
 13 |       console.log(args.firstArr.concat(args.secondArr));
    :       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 14 |       break;
    `----

Error: 
  > void

  x Type
    ,-[$DIR/tests/pass/controlFlow/dependentDestructuredVariables/5.ts:6:1]
  6 |     
  7 | ,-> const reducer: (...args: ReducerArgs) => void = (op, args) => {
  8 | |     switch (op) {
  9 | |       case "add":
 10 | |         console.log(args.a + args.b);
 11 | |         break;
 12 | |       case "concat":
 13 | |         console.log(args.firstArr.concat(args.secondArr));
 14 | |         break;
 15 | |     }
 16 | `-> };
    `----

Error: 
  > (op: ("add" | "concat"), args: ({
  |     a: number;
  |     b: number;
  | } | {
  |     firstArr: any[];
  |     secondArr: any[];
  | })) => void
